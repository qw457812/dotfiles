;; ------------------------------ cheatsheet ------------------------------
;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; key names: https://github.com/yqrashawn/GokuRakuJoudo/blob/master/src/karabiner_configurator/keys_info.clj

;; https://github.com/nikitavoloboev/config/blob/master/karabiner/karabiner.edn
;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/in-the-wild.md

;; defaults write NSGlobalDomain KeyRepeat -int 1
;; defaults write NSGlobalDomain InitialKeyRepeat -int 12
{:profiles  {:Goku
             {:default true :sim 30 :delay 250 :alone 250 :held 250}} ; my config

             ;; {:default true :sim 50 :delay 500 :alone 500 :held 500}}

             ;; {:default true
              ;; :alone   80 ; hold for .. ms to register single tap
              ;; :held    50 ; TODO: not sure what it's for
              ;; :delay   0 ; time after which the key press is delayed
              ;; :sim     30}} ; keys need to be pressed within this threshold to be considered simultaneous

             ;; {:default true
              ;; :sim     50
              ;; :delay   200
              ;; :alone   300
              ;; :held    300}}

             ;; {:default true :sim 50 :delay 250 :alone 250 :held 250}}

 :froms     {:from-middle-click       {:pkey :button3
                                       :modi {:optional :caps_lock}}
             :from-right-click        {:pkey :button2
                                       :modi {:optional :caps_lock}}
             :from-command-left-click {:pkey :button1
                                       :modi {:optional :caps_lock
                                              :mandatory :left_command}}
             :from-option-left-click  {:pkey :button1
                                       :modi {:optional :caps_lock
                                              :mandatory :left_option}}}

 :tos       {:same_wind_app           {:key  :grave_accent_and_tilde
                                       :modi [:left_command]
                                       :lazy true}
             ;; problem: can switch to Finder.app's closed window
             ; :prev_app                {:key  :tab
             ;                           :modi [:left_command]
             ;                           :lazy true}
             ;; use yabai instead of cmd+tab: do not show Finder.app's closed window
             ;; bonus: switch between the windows of same app like cmd+`
             ;; https://github.com/koekeishiya/dotfiles/blob/master/yabai/yabairc
             ;; problem1: can't switch after press cmd+2 in ActivityMonitor.app
             ;; problem2: can't switch to another space's app
             ; :prev_app                {:shell "/opt/homebrew/bin/yabai -m window --focus recent || (id=$(/opt/homebrew/bin/yabai -m query --windows --space | /opt/homebrew/bin/jq '.[1].id') && /opt/homebrew/bin/yabai -m window --focus \"$id\") || open -g hammerspoon://cmdTab"}
             ;; problem: can switch to Finder.app's closed window
             ; :prev_app                {:shell "/opt/homebrew/bin/yabai -m window --focus recent || open -g hammerspoon://cmdTab"}
             :prev_app                {:shell "open -g hammerspoon://prevApp"}
             :open-default-terminal   {:shell "open /Applications/kitty.app"} ; kitty.app, WezTerm.app
             :open-default-browser    {:shell "open \"/Applications/Glide.app\""} ; Brave Browser.app, Helium.app, Glide.app, Google Chrome.app
             :home_dir                [{:key  :grave_accent_and_tilde
                                        :modi [:left_shift]
                                        :lazy true} {:key :slash}]
             :regex_match_any         [{:key :period}
                                       {:key  :8
                                        :modi [:left_shift]
                                        :lazy true}]}

 :templates
 {:open                 "open \"%s\""
  :opena                "open -a \"%s\""
  :opena-file           "open -a \"%s\" \"%s\""
  :open-app             "osascript -e 'tell application \"%s\" to activate'" ; slower than "open -a"
  ;; :open-in-chrome       "open -na \"Google Chrome\" --args \"%s\""
  :hs                   "open -g hammerspoon://%s" ; ~/.hammerspoon/init.lua
  ;; :raycast              "open -g raycast://extensions/%s" ; Deeplink, 不适合有Raycast窗口的Command(如Google Search, can't press again to close), 适合不出现Raycast窗口直接执行的(如OCR, 但也会有Raycast窗口一闪而过)
  :wait_seconds         "osascript -e 'delay %s'"
  :cli_set_var          "'/Library/Application Support/org.pqrs/Karabiner-Elements/bin/karabiner_cli' --set-variables '{\"%s\":%s}'"
  :delay_cli_set_var    "osascript -e 'delay %s' && '/Library/Application Support/org.pqrs/Karabiner-Elements/bin/karabiner_cli' --set-variables '{\"%s\":%s}'"
  :yabai                "PATH=/opt/homebrew/bin:$PATH yabai -m %s"}

 ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md#simlayers
 ;; There're two problems in old layer. When we type "w1" really fast, we trigger the "1" in w layer rather than insert "w1". When we keep press w key down, the w key won't repeat. There won't be a "wwwwwwwwwwwwwwwwwwww".
 ;; :layers    {}

 ;; TODO 可用键位 n, u, c
 :simlayers
 {:spacebar-shift-mode   {:key     :spacebar
                          ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/CHANGELOG.org#050---2022-01-08
                          :modi    {:optional :any}}

  :backspace-shift-mode  {:key     :delete_or_backspace
                          :condi   :glove80
                          :modi    {:optional :any}}

  :v-ctrl-mode           {:key     :v
                          :modi    {:optional :caps_lock}}

  :delete-ctrl-mode      {:key     :delete_forward
                          :condi   :glove80
                          :modi    {:optional :any}}

  :m-ctrl-mode           {:key     :m
                          :modi    {:optional :caps_lock}}

  :return-ctrl-mode      {:key     :return_or_enter
                          :condi   :glove80
                          :modi    {:optional :any}}

  :lshift-cmd-mode       {:key     :left_shift
                          :condi   :glove80
                          :modi    {:optional :any}}

  :mouse_keys_mode_v4    {:key     :a
                          :condi   [:!Games]
                          :afterup {:set ["mouse_keys_mode_v4_scroll" 0]}
                          :modi    {:optional :caps_lock}}

  :s-vi-mode             {:key     :s
                          :modi    {:optional :any}}

  ;; :d-vi-mode             {:key     :d
  ;;                         :modi    {:optional :any}}

  :d-tab-mode            {:key     :d
                          :modi    {:optional :caps_lock}}

  :f-mode                {:key     :f
                          :modi    {:optional :caps_lock}}

  ;; :launch-mode           {:key     :w
  ;;                         :condi   :!Games
  ;;                         :modi    {:optional :caps_lock}}

  :yabai-config-mode     {:key     :w
                          :modi    {:optional :caps_lock}}

  :yabai-warp-mode       {:key     :r
                          :modi    {:optional :caps_lock}}

  :yabai-scale-mode      {:key     :c
                          :modi    {:optional :caps_lock}}

  :website-mode          {:key     :o
                          :condi   :!Games
                          :modi    {:optional :caps_lock}}

  :vi-goto-mode          {:key     :g
                          :modi    {:optional :any}}

  :vi-visual-mode        {:key     :x
                          :condi   [:!Games :!vim-mode-disabled-application]}

  :t-mode                {:key     :t
                          :modi    {:optional :caps_lock}}

  :q-mode                {:key     :q
                          :modi    {:optional :caps_lock}}

  :tab-mode              {:key     :tab
                          :modi    {:optional :any}}

  :k2-mode               {:key     :2
                          :modi    {:optional :caps_lock}}

  :i-mode                {:key     :i
                          :modi    {:optional :caps_lock}}

  ;; :number-r-mode         {:key     :r}

  ;; :symbol-e-mode         {:key     :e}

  :e-mode                {:key     :e
                          :modi    {:optional :caps_lock}}

  ; :r-mode                {:key     :r
  ;                         :modi    {:optional :caps_lock}}
  }

 ;; TODO glove80 right space + right-hand keys 有点浪费, 比如大写 J 会用 left space + j, 可以用作 launch-mode (hjkl 也可以用作 arrow keys)
 :main
 [{:des   "space mode (shift)"
   :rules [:spacebar-shift-mode
           [:1 :!S1]
           [:2 :!S2]
           [:3 :!S3]
           [:4 :!S4]
           [:5 :!S5]
           [:6 :!S6]
           [:7 :!S7]
           [:8 :!S8]
           [:9 :!S9]
           [:0 :!S0]
           [:hyphen :!Shyphen]
           [:equal_sign :!Sequal_sign]
           [:q :!Sq]
           [:w :!Sw :!Preview]
           [:e :!Se]
           [:r :!Sr]
           [:t :!St]
           [:y :!Sy]
           [:u :!Su]
           [:i :!Si]
           [:o :!So]
           [:p :!Sp :!Preview]
           [:open_bracket :!Sopen_bracket]
           [:close_bracket :!Sclose_bracket]
           [:backslash :!Sbackslash]
           [:a :!Sa]
           [:s :!Ss]
           [:d :!Sd]
           [:f :!Sf]
           [:g :!Sg :!Preview]
           [:h :!Sh :!Preview]
           [:j :!Sj]
           [:k :!Sk]
           [:l :!Sl]
           ; [:semicolon :!Ssemicolon]
           [:semicolon :semicolon] ; see "swap : and ;" below
           [:quote :!Squote]
           [:z :!Sz]
           [:x :!Sx]
           [:c :!Sc]
           [:v :!Sv]
           [:b :!Sb]
           [:n :!Sn]
           [:m :!Sm]
           [:comma :!Scomma]
           [:period :!Speriod]
           [:slash :!Sslash]
           [:down_arrow :!Sdown_arrow :!glove80]
           [:up_arrow :!Sup_arrow :!glove80]
           [:left_arrow :!Sleft_arrow]
           [:right_arrow :!Sright_arrow]
           ;; [:spacebar :!Sspacebar]
           [:return_or_enter :!Sreturn_or_enter :!WeWork]
           [:tab :!Stab]
           [:home :!Shome :!glove80]
           [:end :!Send :!glove80]
           [:page_up :!Spage_up]
           [:page_down :!Spage_down]

           [:escape :!Sescape [:!hhkb-bt :!glove80]]
           [:grave_accent_and_tilde :!Sgrave_accent_and_tilde [:!hhkb-bt :!glove80]]
           ;; [:delete_or_backspace :!Sdelete_or_backspace :macbook-internal]
           [:delete_or_backspace :!Sdelete_or_backspace [:!hhkb-bt :!glove80]]

           ;; see "For Not HHKB" below
           [:caps_lock :!Sescape :!hhkb-bt]

           ;; see "For Neither HHKB nor Apple-Internal-Keyboard" below
           ;; [:delete_or_backspace :!Sbackslash [:!hhkb-bt :!macbook-internal]]

           ;; see "For HHKB" below
           [:escape :!Sgrave_accent_and_tilde :hhkb-bt]
           [:grave_accent_and_tilde :!Sescape :hhkb-bt]
           [:delete_or_backspace :!Sbackslash :hhkb-bt] ; left_shift+delete -> |
           [:left_control :!Sescape :hhkb-bt] ; shift+esc for IntelliJ IDEA, Raycast

           ;; see "Preview: doomemacs like keybindings" below
           [:g :!Cdown_arrow :Preview]
           [:w :!C9 :Preview] ; Actual Size (doomemacs pdf-view-fit-width-to-window)
           [:h :!C0 :Preview] ; Zoom to Fit (doomemacs pdf-view-fit-height-to-window)
           [:p :!C0 :Preview] ; Zoom to Fit (doomemacs pdf-view-fit-page-to-window)

           ; see "WeWork: chat message navigation" below
           [:return_or_enter :!Creturn_or_enter :WeWork] ; new line in Sheet cells

           ;; Glove80 only
           [:down_arrow :!Sup_arrow :glove80] ; see "For Glove80" below
           [:up_arrow :!Sdown_arrow :glove80] ; see "For Glove80" below
           [:home :!Sequal_sign :glove80] ; see "For Glove80" below
           [:end :!Shyphen :glove80] ; see "For Glove80" below
           [:escape :!Sgrave_accent_and_tilde :glove80] ; see "For Glove80" below
           [:grave_accent_and_tilde :left_shift :glove80] ; see "For Glove80" below
           ;; 左右互击
           [:delete_or_backspace :!!spacebar :glove80] ; raycast
           ;; [:left_shift :delete_forward :glove80] ; delete_forward, see "For Glove80" below
           [:left_shift :!Sdelete_or_backspace :glove80] ; see "For Glove80" below
           [:delete_forward :!Stab :glove80]
           ]}

  ;; TODO left space + left-hand keys 有点浪费, 比如大写 D 会用 right space + d, 可以用作 launch-mode
  {:des   "backspace mode for glove80 (shift)"
   :rules [:backspace-shift-mode
           [:1 :!S1]
           [:2 :!S2]
           [:3 :!S3]
           [:4 :!S4]
           [:5 :!S5]
           [:6 :!S6]
           [:7 :!S7]
           [:8 :!S8]
           [:9 :!S9]
           [:0 :!S0]
           [:hyphen :!Shyphen]
           [:equal_sign :!Sequal_sign]
           [:q :!Sq]
           [:w :!Sw :!Preview]
           [:e :!Se]
           [:r :!Sr]
           [:t :!St]
           [:y :!Sy]
           [:u :!Su]
           [:i :!Si]
           [:o :!So]
           [:p :!Sp :!Preview]
           [:open_bracket :!Sopen_bracket]
           [:close_bracket :!Sclose_bracket]
           [:backslash :!Sbackslash]
           [:a :!Sa]
           [:s :!Ss]
           [:d :!Sd]
           [:f :!Sf]
           [:g :!Sg :!Preview]
           [:h :!Sh :!Preview]
           [:j :!Sj]
           [:k :!Sk]
           [:l :!Sl]
           ; [:semicolon :!Ssemicolon]
           [:semicolon :semicolon] ; see "swap : and ;" below
           [:quote :!Squote]
           [:z :!Sz]
           [:x :!Sx]
           [:c :!Sc]
           [:v :!Sv]
           [:b :!Sb]
           [:n :!Sn]
           [:m :!Sm]
           [:comma :!Scomma]
           [:period :!Speriod]
           [:slash :!Sslash]
           [:down_arrow :!Sup_arrow] ; see "For Glove80" below
           [:up_arrow :!Sdown_arrow] ; see "For Glove80" below
           [:left_arrow :!Sleft_arrow]
           [:right_arrow :!Sright_arrow]
           ;; [:spacebar :!Sspacebar]
           [:return_or_enter :!Sreturn_or_enter :!WeWork]
           [:tab :!Stab]
           [:home :!Sequal_sign] ; see "For Glove80" below
           [:end :!Shyphen] ; see "For Glove80" below
           [:page_up :!Spage_up]
           [:page_down :!Spage_down]
           [:escape :!Sgrave_accent_and_tilde] ; see "For Glove80" below
           ;; [:grave_accent_and_tilde :!Sgrave_accent_and_tilde]
           [:grave_accent_and_tilde :vk_none] ; see "For Glove80" below

           ;; see "Preview: doomemacs like keybindings" below
           [:g :!Cdown_arrow :Preview]
           [:w :!C9 :Preview] ; Actual Size (doomemacs pdf-view-fit-width-to-window)
           [:h :!C0 :Preview] ; Zoom to Fit (doomemacs pdf-view-fit-height-to-window)
           [:p :!C0 :Preview] ; Zoom to Fit (doomemacs pdf-view-fit-page-to-window)

           ; see "WeWork: chat message navigation" below
           [:return_or_enter :!Creturn_or_enter :WeWork] ; new line in Sheet cells

           ;; Glove80 only
           [:right_control :!Tgrave_accent_and_tilde] ; rime 方案选单
           ;; 左右互击
           [:spacebar :!!spacebar] ; raycast
           [:right_shift :!Sescape] ; see "For Glove80" below
           ]}

  {:des   "v mode (control)"
   :rules [:v-ctrl-mode
           [:1 :!T1]
           [:2 :!T2]
           [:3 :!T3]
           [:4 :!T4]
           [:5 :!T5]
           [:6 :!T6]
           [:7 :!T7]
           [:8 :!T8]
           [:9 :!T9]
           [:0 :!T0]
           [:hyphen :!Thyphen]
           [:equal_sign :!Tequal_sign]
           [:q :!Tq]
           [:w :!Tw]
           [:e :!Te]
           [:r :!Tr]
           [:t :!Tt]
           [:y :!Ty]
           [:u :!Tu :!Spotify]
           [:i :!Ti [:!Neovide :!Finder :!Preview]]
           [:o :!To [:!Finder :!Preview]]
           [:p :!Tp]
           [:open_bracket :!Topen_bracket]
           [:close_bracket :!Tclose_bracket]
           [:backslash :!Tbackslash]
           [:a :!Ta]
           [:s :!Ts]
           [:d :!Td :!Spotify]
           [:f :!Tf]
           [:g :!Tg]
           [:h :!Th [:!Spotify :!Finder]]
           ;; [:h :delete_or_backspace] ; C-h to backspace
           [:j :!Tj [:!WeWork :!WeChat :!Spotify :!Finder]]
           [:k :!Tk [:!Spotify :!Finder]]
           [:l :!Tl [:!Spotify :!Finder]]
           [:semicolon :!TSsemicolon] ; see "swap : and ;" below
           [:quote :!Tquote]
           [:z :!Tz]
           [:x :!Tx]
           [:c :!Tc]
           ;; [:v :!Tv]
           [:b :!Tb]
           [:n :!Tn]
           [:m :!Tm]
           [:comma :!Tcomma]
           [:period :!Tperiod]
           [:slash :!Tslash]
           [:down_arrow :!Tdown_arrow]
           [:up_arrow :!Tup_arrow]
           [:left_arrow :!Tleft_arrow]
           [:right_arrow :!Tright_arrow]
           [:spacebar :!Tspacebar]
           [:return_or_enter :!Treturn_or_enter]
           [:tab :!Ttab]
           [:escape :!Tescape]
           [:grave_accent_and_tilde :!Tgrave_accent_and_tilde]
           [:delete_or_backspace :!Tdelete_or_backspace]

           ;; see "WeWork: chat message navigation" below
           [:j :!COdown_arrow :WeWork] ; select next unread chat message

           ;; see "WeChat: chat message navigation" below
           [:j :!COdown_arrow :WeChat] ; select next unread chat message

           ;; see "Spotify: play navigation" below
           [:j :!Cright_arrow :Spotify] ; next
           [:k :!Cleft_arrow :Spotify] ; previous
           [:l :!CSright_arrow :Spotify] ; seek forward
           [:h :!CSleft_arrow :Spotify] ; seek backward
           [:u :!Cup_arrow :Spotify] ; volume up
           [:d :!Cdown_arrow :Spotify] ; volume down

           ;; see "Finder: navigation" below
           [:j :down_arrow :Finder]
           [:k :up_arrow :Finder]
           [:h :!Cup_arrow :Finder] ; Enclosing Folder
           [:l :!Cdown_arrow :Finder]
           [:o :!Copen_bracket :Finder] ; Back
           [:i :!Cclose_bracket :Finder] ; Forward

           ;; see "Preview: doomemacs like keybindings" below
           [:o :!Copen_bracket :Preview] ; previous position
           [:i :!Cclose_bracket :Preview] ; next position

           ;; see "Neovide: distinguish <C-i> and <Tab>" below
           [:i :!Oi :Neovide]
           ]}

  {:des   "delete mode for glove80 (control)"
   :rules [:delete-ctrl-mode
           [:1 :!T1]
           [:2 :!T2]
           [:3 :!T3]
           [:4 :!T4]
           [:5 :!T5]
           [:6 :!T6]
           [:7 :!T7]
           [:8 :!T8]
           [:9 :!T9]
           [:0 :!T0]
           [:hyphen :!Thyphen]
           [:equal_sign :!Tequal_sign]
           [:q :!Tq]
           [:w :!Tw]
           [:e :!Te]
           [:r :!Tr]
           [:t :!Tt]
           [:y :!Ty]
           [:u :!Tu :!Spotify]
           [:i :!Ti [:!Neovide :!Finder :!Preview]]
           [:o :!To [:!Finder :!Preview]]
           [:p :!Tp]
           [:open_bracket :!Topen_bracket]
           [:close_bracket :!Tclose_bracket]
           [:backslash :!Tbackslash]
           [:a :!Ta]
           [:s :!Ts]
           [:d :!Td :!Spotify]
           [:f :!Tf]
           [:g :!Tg]
           [:h :!Th [:!Spotify :!Finder]]
           ;; [:h :delete_or_backspace] ; C-h to backspace
           [:j :!Tj [:!WeWork :!WeChat :!Spotify :!Finder]]
           [:k :!Tk [:!Spotify :!Finder]]
           [:l :!Tl [:!Spotify :!Finder]]
           [:semicolon :!TSsemicolon] ; see "swap : and ;" below
           [:quote :!Tquote]
           [:z :!Tz]
           [:x :!Tx]
           [:c :!Tc]
           [:v :!Tv]
           [:b :!Tb]
           [:n :!Tn]
           [:m :!Tm]
           [:comma :!Tcomma]
           [:period :!Tperiod]
           [:slash :!Tslash]
           [:down_arrow :!Tup_arrow] ; see "For Glove80" below
           [:up_arrow :!Tdown_arrow] ; see "For Glove80" below
           [:left_arrow :!Tleft_arrow]
           [:right_arrow :!Tright_arrow]
           [:spacebar :!Tspacebar]
           [:return_or_enter :!Treturn_or_enter]
           [:tab :!Ttab]
           [:escape :!Tescape]
           [:grave_accent_and_tilde :!Tgrave_accent_and_tilde]
           [:delete_or_backspace :!Tdelete_or_backspace]

           ;; see "WeWork: chat message navigation" below
           [:j :!COdown_arrow :WeWork] ; select next unread chat message

           ;; see "WeChat: chat message navigation" below
           [:j :!COdown_arrow :WeChat] ; select next unread chat message

           ;; see "Spotify: play navigation" below
           [:j :!Cright_arrow :Spotify] ; next
           [:k :!Cleft_arrow :Spotify] ; previous
           [:l :!CSright_arrow :Spotify] ; seek forward
           [:h :!CSleft_arrow :Spotify] ; seek backward
           [:u :!Cup_arrow :Spotify] ; volume up
           [:d :!Cdown_arrow :Spotify] ; volume down

           ;; see "Finder: navigation" below
           [:j :down_arrow :Finder]
           [:k :up_arrow :Finder]
           [:h :!Cup_arrow :Finder] ; Enclosing Folder
           [:l :!Cdown_arrow :Finder]
           [:o :!Copen_bracket :Finder] ; Back
           [:i :!Cclose_bracket :Finder] ; Forward

           ;; see "Preview: doomemacs like keybindings" below
           [:o :!Copen_bracket :Preview] ; previous position
           [:i :!Cclose_bracket :Preview] ; next position

           ;; see "Neovide: distinguish <C-i> and <Tab>" below
           [:i :!Oi :Neovide]
           ]}

  ;; use `:!T1` instead of `:!W1` to avoid toggling rime's ascii_mode by right_control
  {:des   "m mode (control)"
   :rules [:m-ctrl-mode
           [:1 :!T1]
           [:2 :!T2]
           [:3 :!T3]
           [:4 :!T4]
           [:5 :!T5]
           [:6 :!T6]
           [:7 :!T7]
           [:8 :!T8]
           [:9 :!T9]
           [:0 :!T0]
           [:hyphen :!Thyphen]
           [:equal_sign :!Tequal_sign]
           [:q :!Tq]
           [:w :!Tw]
           [:e :!Te]
           [:r :!Tr :!Finder]
           [:t :!Tt]
           [:y :!Ty]
           [:u :!Tu]
           [:i :!Ti :!Neovide]
           [:o :!To]
           [:p :!Tp]
           [:open_bracket :!Topen_bracket]
           [:close_bracket :!Tclose_bracket]
           [:backslash :!Tbackslash]
           [:a :!Ta]
           [:s :!Ts]
           [:d :!Td [:!Spotify :!Finder]]
           [:f :!Tf]
           [:g :!Tg :!Finder]
           [:h :!Th]
           ;; [:h :delete_or_backspace] ; C-h to backspace
           [:j :!Tj]
           ;; [:k :!Tk] ; see "simultaneous keys" below
           [:l :!Tl]
           [:semicolon :!Tsemicolon]
           [:quote :!Tquote]
           [:z :!Tz]
           [:x :!Tx]
           [:c :!Tc]
           [:v :!Tv]
           [:b :!Tb]
           [:n :!Tn]
           ;; [:m :!Tm]
           [:comma :!Tcomma]
           [:period :!Tperiod]
           [:slash :!Tslash]
           [:down_arrow :!Tdown_arrow]
           [:up_arrow :!Tup_arrow]
           [:left_arrow :!Tleft_arrow]
           [:right_arrow :!Tright_arrow]
           [:spacebar :!Tspacebar]
           [:return_or_enter :!Treturn_or_enter]
           [:tab :!Ttab]
           [:escape :!Tescape]
           [:grave_accent_and_tilde :!Tgrave_accent_and_tilde :!Finder]
           [:delete_or_backspace :!Tdelete_or_backspace]

           ;; see "Spotify: play navigation" below
           [:d :!Cdown_arrow :Spotify] ; volume down

           ;; see "Finder: navigation" below
           [:g :!CSg :Finder] ; Go To Folder
           [:grave_accent_and_tilde :!CSh :Finder] ; Home
           [:r :!CSf :Finder] ; Recents
           [:d :!COl :Finder] ; Downloads

           ;; see "Neovide: distinguish <C-i> and <Tab>" below
           [:i :!Oi :Neovide]
           ]}

  ;; use `:!T1` instead of `:!W1` to avoid toggling rime's ascii_mode by right_control
  {:des   "return mode for glove80 (control)"
   :rules [:return-ctrl-mode
           [:1 :!T1]
           [:2 :!T2]
           [:3 :!T3]
           [:4 :!T4]
           [:5 :!T5]
           [:6 :!T6]
           [:7 :!T7]
           [:8 :!T8]
           [:9 :!T9]
           [:0 :!T0]
           [:hyphen :!Thyphen]
           [:equal_sign :!Tequal_sign]
           [:q :!Tq]
           [:w :!Tw]
           [:e :!Te]
           [:r :!Tr :!Finder]
           [:t :!Tt]
           [:y :!Ty]
           [:u :!Tu]
           [:i :!Ti :!Neovide]
           [:o :!To]
           [:p :!Tp]
           [:open_bracket :!Topen_bracket]
           [:close_bracket :!Tclose_bracket]
           [:backslash :!Tbackslash]
           [:a :!Ta]
           [:s :!Ts]
           [:d :!Td [:!Spotify :!Finder]]
           [:f :!Tf]
           [:g :!Tg :!Finder]
           [:h :!Th]
           ;; [:h :delete_or_backspace] ; C-h to backspace
           [:j :!Tj]
           [:k :!Tk]
           [:l :!Tl]
           [:semicolon :!Tsemicolon]
           [:quote :!Tquote]
           [:z :!Tz]
           [:x :!Tx]
           [:c :!Tc]
           [:v :!Tv]
           [:b :!Tb]
           [:n :!Tn]
           [:m :!Tm]
           [:comma :!Tcomma]
           [:period :!Tperiod]
           [:slash :!Tslash]
           [:down_arrow :!Tup_arrow] ; see "For Glove80" below
           [:up_arrow :!Tdown_arrow] ; see "For Glove80" below
           [:left_arrow :!Tleft_arrow]
           [:right_arrow :!Tright_arrow]
           [:spacebar :!Tspacebar]
           ;; [:return_or_enter :!Treturn_or_enter]
           [:tab :!Ttab]
           [:home :!Tequal_sign] ; see "For Glove80" below
           [:end :!Thyphen] ; see "For Glove80" below
           [:escape :!Tgrave_accent_and_tilde :!Finder] ; see "For Glove80" below
           ;; [:grave_accent_and_tilde :!Tgrave_accent_and_tilde] ; see "For Glove80" below
           [:delete_or_backspace :!Tdelete_or_backspace]

           ;; see "Spotify: play navigation" below
           [:d :!Cdown_arrow :Spotify] ; volume down

           ;; see "Finder: navigation" below
           [:g :!CSg :Finder] ; Go To Folder
           [:escape :!CSh :Finder] ; Home, see "For Glove80" below
           [:r :!CSf :Finder] ; Recents
           [:d :!COl :Finder] ; Downloads

           ;; see "Neovide: distinguish <C-i> and <Tab>" below
           [:i :!Oi :Neovide]
           ]}

  {:des   "lshift mode for glove80 (cmd)"
   :rules [:lshift-cmd-mode
           [:1 :!C1]
           [:2 :!C2]
           [:3 :!C3]
           [:4 :!C4]
           [:5 :!C5]
           [:6 :!C6]
           [:7 :!C7]
           [:8 :!C8]
           [:9 :!C9]
           [:0 :!C0]
           [:hyphen :!Chyphen]
           [:equal_sign :!Cequal_sign]
           [:q :!Cq]
           [:w :!Cw]
           [:e :!Ce]
           [:r :!Cr]
           [:t :!Ct]
           [:y :!Cy]
           [:u :!Cu]
           [:i :!Ci]
           [:o :!Co]
           [:p :!Cp]
           [:open_bracket :!Copen_bracket]
           [:close_bracket :!Cclose_bracket]
           [:backslash :!Cbackslash]
           [:a :!Ca]
           [:s :!Cs]
           [:d :!Cd]
           [:f :!Cf]
           [:g :!Cg]
           [:h :!Ch]
           [:j :!Cj]
           [:k :!Ck]
           [:l :!Cl]
           ;; [:semicolon :!Csemicolon]
           [:semicolon :!CSsemicolon] ; see "swap : and ;" below
           [:quote :!Cquote]
           [:z :!Cz]
           [:x :!Cx]
           [:c :!Cc]
           ;; [:v :!Cv [:!WPSOffice :!CitrixViewer]]
           [:v :!Cv :!CitrixViewer]
           [:b :!Cb]
           [:n :!Cn]
           [:m :!Cm]
           [:comma :!Ccomma]
           [:period :!Cperiod]
           [:slash :!Cslash]
           [:down_arrow :!Cup_arrow] ; see "For Glove80" below
           [:up_arrow :!Cdown_arrow] ; see "For Glove80" below
           [:left_arrow :!Cleft_arrow]
           [:right_arrow :!Cright_arrow]
           [:spacebar :!Cspacebar]
           [:return_or_enter :!Creturn_or_enter]
           [:tab :!Ctab]
           [:escape :!Cescape]
           [:right_shift :!Cescape] ; see "For Glove80" below
           [:grave_accent_and_tilde :!Cgrave_accent_and_tilde]
           [:delete_or_backspace :!Cdelete_or_backspace]
           [:home :!Cequal_sign] ; see "For Glove80" below
           [:end :!Chyphen] ; see "For Glove80" below
           [:page_up :!Cpage_up]
           [:page_down :!Cpage_down]

           ;; [:v :!COSv :WPSOffice] ; see "WPSOffice: paste without formatting" below, comment out for paste in search bar
           [:v :!Sinsert :CitrixViewer] ; for MTPuTTY
           ]}

  ;; Mos.app 翻转鼠标滚动方向
  {:des   "a mode (mouse keys mode v4 rev 1)"
   :rules [[:##j {:mkey {:vwheel -32}} [["mouse_keys_mode_v4_scroll" 1]]
            ["mouse_keys_mode_v4" 1]]
           [:##h {:mkey {:hwheel -32}} [["mouse_keys_mode_v4_scroll" 1]]
            ["mouse_keys_mode_v4" 1]]
           [:##k {:mkey {:vwheel 32}} [["mouse_keys_mode_v4_scroll" 1]]
            ["mouse_keys_mode_v4" 1]]
           [:##l {:mkey {:hwheel 32}} [["mouse_keys_mode_v4_scroll" 1]]
            ["mouse_keys_mode_v4" 1]]
           :mouse_keys_mode_v4
           [:##j {:mkey {:y 3072}}]
           [:##k {:mkey {:y -3072}}]
           [:##h {:mkey {:x -3072}}]
           [:##l {:mkey {:x 3072}}]
           [:##v {:pkey :button1}] ; Left click
           [:##b {:pkey :button3}] ; Middle click
           [:##n {:pkey :button2}] ; Right click
           [:##s ["mouse_keys_mode_v4_scroll" 1] nil
            {:afterup ["mouse_keys_mode_v4_scroll" 0]}]
           [:##f {:mkey {:speed 0.25}}]

           [:i :!Ckeypad_plus] ; Zoom in
           [:o :!Ckeypad_hyphen] ; Zoom out
           [:m [:hs ["mouseHighlight"]]] ; show mouse
           ;; [:spacebar [:hs ["mouseCenterClick"]]] ; centre mouse to active app
           [:##spacebar {:pkey :button1}] ; Left click
           ]}

  {:des   "s mode (vi mode)"
   :rules [:s-vi-mode
           ;; `##`有用吗, 去掉后diff json ---> 似乎没用
           [:##j :down_arrow]
           [:##k :up_arrow]
           [:##h :left_arrow]
           [:##l :right_arrow]
           [:v :left_shift] ; Vi Visual Mode

           ;; [:##b :!Oleft_arrow]
           ;; [:##e :!Oright_arrow] ; 常用 user select
           [:##0 :!Cleft_arrow]
           [:##4 :!Cright_arrow]
           ;; [:##hyphen :end] ; g_
           ;; [:d :!Cx]
           [:y :!Cc]
           [:p :!Cv]
           [:u :!Cz]
           [:r :!CSz]

           ;; [:semicolon [:!Cleft_arrow :!CSright_arrow]] ; Highlight current line
           ;; [:c :!Cdelete_or_backspace]
           ;; [:##n :!Cleft_arrow] ; C-a
           ;; [:##m :!Cright_arrow] ; C-e ; 常用 wsm 为什么
           ;; [:##u :page_up]
           ;; [:##d :page_down]
           ;; [:##i :page_up]
           ;; [:##o :page_down]
           ;; [:##c :left_control]
           ;; [:##v :left_option]
           ;; [:##b :left_command]

           ; ~/Library/Rime/default.custom.yaml
           [:i :!TSopen_bracket] ; select next schema
           [:o :!TSperiod] ; toggle ascii punct

           ;; [:##f :fn]
           [:d :!Cc :!CitrixViewer]
           [:f :!Cv :!CitrixViewer]
           [:d :!Cinsert :CitrixViewer] ; for MTPuTTY
           [:f :!Sinsert :CitrixViewer] ; for MTPuTTY
           [:a :!!f7] ; clipboard history by Maccy.app
           ]}

  #_{:des   "d mode (vi mode)"
   :rules [:d-vi-mode
           [:##j :down_arrow]
           [:##k :up_arrow]
           [:##h :left_arrow]
           [:##l :right_arrow]
           [:v :left_shift] ; Vi Visual Mode

           [:##b :!Oleft_arrow]
           [:##w :!Oright_arrow]
           [:##0 :home]
           [:##4 :end]
           ;; [:##hyphen :end]
           ;; [:s :!Cx]
           [:y :!Cc]
           [:p :!Cv]
           [:u :!Cz]
           [:r :!CSz]

           ;; [:semicolon [:!Cleft_arrow :!CSright_arrow]] ; Highlight current line
           ;; [:c :!Cdelete_or_backspace]
           [:##n :!Cleft_arrow] ; C-a
           [:##m :!Cright_arrow] ; C-e
           ;; [:##i :page_up]
           ;; [:##o :page_down] ; 常用 do

           ;; [:j {:mkey {:vwheel -60}}] ; Scroll down
           ;; [:k {:mkey {:vwheel 60}}] ; Scroll up
           ;; [:z {:pkey :button2}] ; Right click
           ;; [:v {:pkey :button1}] ; Left click
           ;; [:b {:pkey :button3}] ; Middle click
           ;; [:x {:pkey :button3}] ; Middle click

           ;; switch tabs in most apps
           [:##comma :!CSopen_bracket] ; Cmd Shift [
           [:##period :!CSclose_bracket] ; Cmd Shift ]

           ;; [:##f :fn]

           ;; Homerow.app
           [:f :!!f6] ; Clicking (vimium-f)
           [:s :!!f5] ; Scrolling
           ]}

  {:des   "d mode (tab navigation)"
   :rules [:d-tab-mode
           ;; FIXME vscode 中有时不灵, 在rime配置中修改快捷键
           ;; [:i :left_shift] ; rime 中英切换 | ~/Library/Rime/default.custom.yaml

           [:spacebar :same_wind_app] ; cmd+`

           ;; switch tabs in most apps
           [:j :!CSclose_bracket [:!switch-tabs-by-ctrl-tab-app :!tmux-autostart-terminals :!Emacs :!WeWork :!WeChat]] ; Cmd Shift ]
           [:k :!CSopen_bracket [:!switch-tabs-by-ctrl-tab-app :!tmux-autostart-terminals :!Emacs :!WeWork :!WeChat]] ; Cmd Shift [
           [:j :!Ttab :switch-tabs-by-ctrl-tab-app] ; Ctrl Tab
           [:k :!TStab :switch-tabs-by-ctrl-tab-app] ; Ctrl Shift Tab
           [:j [:!Tb :!Tl] :tmux-autostart-terminals] ; tmux: next window
           [:k [:!Tb :!Th] :tmux-autostart-terminals] ; tmux: previous window
           ;; [:j [:spacebar :tab :close_bracket] :Emacs] ; doomemacs: next workspace
           ;; [:k [:spacebar :tab :open_bracket] :Emacs] ; doomemacs: previous workspace
           [:j [:spacebar :b :n] :Emacs] ; doomemacs: next buffer
           [:k [:spacebar :b :p] :Emacs] ; doomemacs: previous buffer
           [:j :!Cdown_arrow :WeWork] ; wework: next chat message
           [:k :!Cup_arrow :WeWork] ; wework: previous chat message
           [:j :!Odown_arrow :WeChat] ; wechat: next chat message
           [:k :!Oup_arrow :WeChat] ; wechat: previous chat message

           ;; create/close tab in most apps
           ;; [:l :!Ct [:!create-tab-by-cmd-n-app :!tmux-autostart-terminals]] ; Cmd t
           ;; [:h :!Cw :!tmux-autostart-terminals] ; Cmd w
           ;; [:l :!Cn :create-tab-by-cmd-n-app] ; Cmd n
           ;; [:l [:!Tb :c] :tmux-autostart-terminals] ; tmux: new window
           ;; [:h [:!Tb :!S7] :tmux-autostart-terminals] ; tmux: kill window
           [:n :!Ct [:!create-tab-by-cmd-n-app :!tmux-autostart-terminals :!Emacs]] ; Cmd t
           [:n :!Cn :create-tab-by-cmd-n-app] ; Cmd n
           [:n [:!Tb :c] :tmux-autostart-terminals] ; tmux: new window
           [:n [:spacebar :b :!Sn] :Emacs] ; doomemacs: new empty buffer

           ;; switch sheets
           ;; [:comma :!COopen_bracket :WPSOffice] ; wps: previous worksheet
           ;; [:period :!COclose_bracket :WPSOffice] ; wps: next worksheet
           [:h :!COopen_bracket :WPSOffice] ; wps: previous worksheet
           [:l :!COclose_bracket :WPSOffice] ; wps: next worksheet
           ;; TODO tmux: previous pane
           [:h [:!Tb :h :!Tb :k] :tmux-autostart-terminals] ; tmux: previous pane
           [:l [:!Tb :o] :tmux-autostart-terminals] ; tmux: next pane
           [:h [:spacebar :w :!Sw] :Emacs] ; doomemacs: previous window
           [:l [:spacebar :w :w] :Emacs] ; doomemacs: next window

           ;; resize window, remap Rectangle.app
           [:m :!TSOspacebar] ; maximize

           ;; ~/.hammerspoon/init.lua | https://github.com/dbalatero/VimMode.spoon
           ;; [:v :!!f19 [:!vim-mode-disabled-application :!Emacs]]

           ;; Homerow.app
           [:f :!!f6] ; Clicking (vimium-f)
           [:s :!!f5] ; Scrolling
           ]}

  {:des   "f mode (delete, return, backslash)"
   :rules [:f-mode
           [:spacebar :!Sgrave_accent_and_tilde] ; ~
           [:h :!Sbackslash] ; |
           [:j :delete_or_backspace]
           [:k :return_or_enter]
           [:l :backslash] ; \ for HHKB

           [:m :delete_forward]
           ;; [:n :delete_forward]
           ;; [:m :tab]

           [:y :!S6] ; ^
           [:u :hyphen] ; -
           [:i :equal_sign] ; =
           [:o :!Shyphen] ; _
           [:p :!Sequal_sign] ; +

           ;; tool
           [:q :!!7] ; Snipaste: hide/show all images
           [:w :!!6] ; Snipaste: paste
           [:e :!!5] ; Snipaste: snip and copy
           [:s :!!f11] ; Snipaste: snip
           [:d :!!f10] ; raycast://extensions/isfeng/easydict/ocr
           [:a :!!f3] ; raycast://extensions/huzef44/screenocr/recognize-text
           ]}

  ;; Karabiner-EventViewer.app ---> Frontmost Application
  #_{:des   "w mode (application launcher)"
   :rules [:launch-mode
           ;; TODO spacebar
           [:h [:open "/Applications/企业微信.app"] :!WeWork]
           ;; [:h :same_wind_app :WeWork]
           [:h :!Ograve_accent_and_tilde :WeWork] ; AltTab.app
           [:j [:open "/Applications/Google Chrome.app"] :!Chrome]
           [:j :same_wind_app :Chrome]
           [:k [:open "/Applications/kitty.app"] :!Kitty]
           [:k :same_wind_app :Kitty]
           [:l [:open "/Applications/Visual Studio Code.app"] :!VSCode]
           [:l :same_wind_app :VSCode]
           [:semicolon [:open "/Library/Application Support/Citrix Receiver/Citrix Viewer.app"]] ; Citrix Workspace.app
           [:quote [:open "/Applications/SwitchHosts.app"]]
           ;; [:a [:open-app "Activity Monitor"]]
           [:a [:open "/System/Applications/Utilities/Activity Monitor.app"]]
           [:s [:open "/Applications/Spotify.app"]]
           [:d [:open "/Applications/DBeaver.app"]]
           ;; [:f [:opena "Finder"] :!Finder]
           [:f [:open "/System/Library/CoreServices/Finder.app"] :!Finder]
           [:f :same_wind_app :Finder]
           ;; [:g [:open "/Applications/TidGi.app"]]
           [:g [:open "/Applications/ChatGPT.app"] :!ChatGPT]
           [:g :same_wind_app :ChatGPT]
           [:e [:open "/Applications/Emacs.app"] :!Emacs]
           [:e :same_wind_app :Emacs]
           [:r [:open "/Applications/Safari.app"] :!Safari]
           [:r :same_wind_app :Safari]
           [:t [:open "/Applications/iTerm.app"] :!iTerm]
           [:t :same_wind_app :iTerm]
           ;; [:y [:open "/Applications/YesPlayMusic.app"]]
           [:y [:open "$HOME/Applications/PyCharm Community Edition.app"] :!PyCharm]
           [:y :same_wind_app :PyCharm]
           [:u [:open "/Applications/Neovide.app"]] ; pronounce
           [:i [:open "/Applications/IntelliJ IDEA CE.app"] :!IntelliJ]
           [:i :same_wind_app :IntelliJ]
           ;; [:o [:open "/Applications/Obsidian.app"]]
           [:o [:open "/Applications/wpsoffice.app"]] ; office
           [:p [:open "/System/Applications/Preview.app"] :!Preview]
           [:p :same_wind_app :Preview]
           [:open_bracket [[:open "/Applications/企业微信.app/Contents/Frameworks/wwmapp.app"] :same_wind_app] :!WeWork-Meeting] ; 企业微信•会议
           [:open_bracket :same_wind_app :WeWork-Meeting]
           [:v [:open "/Applications/Karabiner-EventViewer.app"]]
           [:b [:open "/Applications/JetBrains Toolbox.app"]]
           ;; open my tiddlywiki then press escape to trigger vimium in chrome
           [:n [:open "http://127.0.0.1:8080/"] nil {:delayed {:invoked [:escape]} :params {:delay 800}}] ; note
           [:m [:open "/Applications/Thunderbird.app"] :!Thunderbird] ; email
           [:m :same_wind_app :Thunderbird]
           [:comma [:open "/System/Applications/System Settings.app"]] ; cmd+, for setting
           [:period [:open "/System/Applications/Launchpad.app"]] ; 启动台
           [:slash [:open "/Applications/WhatPulse/WhatPulse.app"]]
           ;; [:left_command [:open "/Applications/OpenInTerminal-Lite.app"] :!glove80]
           ;; [:left_shift [:open "/Applications/OpenInTerminal-Lite.app"] :glove80]
           ;; [:right_command [:open "/Applications/OpenInEditor-Lite.app"] :!glove80]
           ;; [:right_shift [:open "/Applications/OpenInEditor-Lite.app"] :glove80]
           [:left_option [:open "/Applications/Karabiner-Elements.app"]]
           [:right_option [:open "/Applications/WeChat.app"]]
           ]}

  {:des   "w mode (yabai)"
   :rules [:yabai-config-mode
           ;; toggle yabai layout between bsp and stack
           [:spacebar "if [ $(/opt/homebrew/bin/yabai -m config layout) = 'stack' ]; then /opt/homebrew/bin/yabai -m config layout bsp && /opt/homebrew/bin/brew services run felixkratz/formulae/borders; else /opt/homebrew/bin/yabai -m config layout stack && /opt/homebrew/bin/brew services stop felixkratz/formulae/borders; fi"]
           [:return_or_enter [:yabai "window --toggle float"]]
           [:o :!COh] ; Hide Others (only)
           [:p [:yabai "window --toggle zoom-parent"]]
           [:m [:yabai "window --toggle zoom-fullscreen"]]
           [:x [:yabai "window --close"]]
           [:delete_or_backspace [:yabai "window --close"]]
           ;; focus mode
           [:h "/opt/homebrew/bin/yabai -m window --focus west || /opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows --display west | /opt/homebrew/bin/jq 'map(select(.\"is-visible\" == true and .\"is-sticky\" == false)) | sort_by(.frame.x, .frame.y) | first | .id')"]
           [:j "/opt/homebrew/bin/yabai -m window --focus south || /opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows --display south | /opt/homebrew/bin/jq 'map(select(.\"is-visible\" == true and .\"is-sticky\" == false)) | sort_by(.frame.y, .frame.x) | first | .id')"]
           [:k "/opt/homebrew/bin/yabai -m window --focus north || /opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows --display north | /opt/homebrew/bin/jq 'map(select(.\"is-visible\" == true and .\"is-sticky\" == false)) | sort_by(.frame.x, .frame.y) | first | .id')"]
           [:l "/opt/homebrew/bin/yabai -m window --focus east || /opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows --display east | /opt/homebrew/bin/jq 'map(select(.\"is-visible\" == true and .\"is-sticky\" == false)) | sort_by(.frame.x, .frame.y) | first | .id')"]
           ;; [:spacebar "yabai -m window --focus prev"]
           [:n [:yabai "space --focus next"]]
           [:p [:yabai "space --focus prev"]]
           ]}

  {:des   "r mode (yabai)"
   :rules [:yabai-warp-mode
           ;; move windows
           [:h [:yabai "window --warp west"]]
           [:j [:yabai "window --warp south"]]
           [:k [:yabai "window --warp north"]]
           [:l [:yabai "window --warp east"]]
           [:n [:yabai "window --warp next"]]
           [:p [:yabai "window --warp prev"]]
           ]}

  {:des   "c mode (yabai)"
   :rules [:yabai-scale-mode
           ;; scale windows
           [:h "~/.config/yabai/resize left"]
           [:j "~/.config/yabai/resize down"]
           [:k "~/.config/yabai/resize up"]
           [:l "~/.config/yabai/resize right"]
           ]}

  {:des   "o mode (website)"
   :rules [:website-mode
           ;; TODO spacebar
           [:j [:open "https://google.com/search?q=$(pbpaste)"]]
           ;; [:f [:opena-file "/Applications/Google Chrome.app" "chrome://newtab/"]]
           ;; [:f [:opena-file "/Applications/Brave Browser.app" "brave://newtab/"]]
           [:f [:opena-file "/Applications/Helium.app" "helium://newtab/"]]
           ;; [:e [:opena-file "/Applications/Google Chrome.app" "chrome://extensions/"]]
           ;; [:e [:opena-file "/Applications/Brave Browser.app" "brave://extensions/"]]
           [:e [:opena-file "/Applications/Helium.app" "helium://extensions/"]]
           [:d [:open "https://www.deepl.com/translator"]]
           ;; https://github.com/pqrs-org/Karabiner-Elements/issues/2535
           ;; [:s :!Cc nil {:delayed {:invoked [:open "https://translate.google.com/?sl=en&tl=zh-CN&text=$(pbpaste)&op=translate"]} :params {:delay 30}}]
           ;; [:s [:open "https://translate.google.com/?sl=en&tl=zh-CN&text=$(pbpaste)&op=translate"]]
           ; [:s [:open "https://translate.google.com/?sl=en&tl=zh-CN&op=translate"]]
           [:s [:open "https://github.com/search"]]
           [:b :!!hyphen] ; raycast://extensions/Codely/google-chrome/search-bookmarks
           [:h :!!f9] ; raycast://extensions/Codely/google-chrome/search-history
           [:t :!!f8] ; raycast://extensions/Codely/google-chrome/search-tab
           [:a [:open "http://localhost:3000/log"]] ; https://github.com/songquanpeng/one-api
           [:g [:open "https://github.com/"]]
           ;; [:c [:open "https://chatgpt.com/"]]
           ;; [:c [:open "https://docs.anthropic.com/en/docs/claude-code/overview"]]
           [:c [:open "https://github.com/search?type=code"]] ; https://github.com/features/code-search
           [:u [:open "https://unifuncs.com/deepresearch"]]
           [:n [:open "https://wiki.nikiv.dev"]]
           [:z [:open "https://www.chezmoi.io/quick-start/"]]
           [:x [:open "https://learnxinyminutes.com/"]]
           [:p [:open "https://tiger-code.com/practice/advanced"]]
           [:i [:open "https://ossinsight.io/"]]
           [:grave_accent_and_tilde [:open "https://github.com/qw457812/dotfiles"] [:!hhkb-bt :!glove80]]
           [:escape [:open "https://github.com/qw457812/dotfiles"] :hhkb-bt] ; see "For HHKB" below
           [:escape [:open "https://github.com/qw457812/dotfiles"] :glove80] ; see "For Glove80" below
           ;; 临时使用
           [:v ["$HOME/temp/temp_open_vpn"]]
           [:2 ["$HOME/temp/temp_open_ui_uat"]]
           [:3 ["$HOME/temp/temp_open_ui_prod"]]
           [:4 ["$HOME/temp/temp_open_pass"] nil {:delayed {:invoked [:q :w :return_or_enter :escape]} :params {:delay 800}}] ; "qw"是密码
           [:5 [:open "http://localhost:5000"]]
           [:1 [:open "http://localhost:8501/"]]
           [:7 [:open "http://localhost:7860/"]]
           ]}

  {:des   "g mode (vi goto mode)"
   :rules [:vi-goto-mode
           ;; https://docs.helix-editor.com/keymap.html#goto-mode
           [:##j :page_down]
           [:##k :page_up]
           ;; TODO 根据不同app使用: home/end, ctrl+a/ctrl+e, cmd+left_arrow/cmd+right_arrow
           [:##h :home :!line-navigating-by-cmd-arrow-app]
           [:##l :end :!line-navigating-by-cmd-arrow-app]
           [:##h :!Cleft_arrow :line-navigating-by-cmd-arrow-app]
           [:##l :!Cright_arrow :line-navigating-by-cmd-arrow-app]
           ]}

  {:des   "x mode (vi visual mode)"
   :rules [:vi-visual-mode
           [:##j :!Sdown_arrow]
           [:##k :!Sup_arrow]
           [:##h :!Sleft_arrow]
           [:##l :!Sright_arrow]
           [:##b :!SOleft_arrow]
           [:##w :!SOright_arrow]
           [:##e :!SOright_arrow]
           [:##0 :!Shome]
           [:##4 :!Send]
           ;; [:##hyphen :!Send]
           ;; [:##0 :!SCleft_arrow]
           ;; [:##hyphen :!SCright_arrow]
           ;; [:##u :!Spage_up]
           ;; [:##d :!Spage_down]
           ;; [:##n :!SCleft_arrow]
           ;; [:##m :!SCright_arrow]
           ;; [:##d :delete_forward]
           ;; [:##open_bracket :!SOup_arrow]
           ;; [:##close_bracket :!SOdown_arrow]
           ;; [:##comma :!SOleft_arrow]
           ;; [:##period :!SOright_arrow]
           [:d :!Cx]
           [:y :!Cc]
           [:p :!Cv]
           [:semicolon [:!Cleft_arrow :!CSright_arrow]] ; Highlight current line
           ]}

  ;; TODO t 不好按
  ;; TODO 可用键位 :!!f14 :!!f15 :!!f18
  {:des   "t mode (toggle setting, information)"
   :rules [:t-mode
           [:spacebar :!!f16] ; show hidden items for Bartender 4
           [:i :!!close_bracket nil {:delayed {:invoked [:!Ct]} :params {:delay 100}}] ; trigger Benchmark for ClashX
           [:h :!!open_bracket] ; Switch Hosts (Raycast extensions)
           ;; [:j :!!close_bracket] ; open Menu for ClashX
           [:j [:open "/Applications/v2rayN.app"] :!V2rayN]
           [:j :prev_app :V2rayN]
           [:k [:hs ["toggleAClock"]]] ; show time
           [:l :!!f12] ; itsycal (calendar)
           [:semicolon :!!f2] ; control center by Bartender 4
           ;; Toggle dark mode (https://github.com/sindresorhus/dark-mode/blob/main/Sources/DarkMode.swift)
           [:d "osascript -e 'tell application \"System Events\" to tell appearance preferences to set dark mode to not dark mode'"]
           [:w :!!f13] ; wifi by Bartender 4
           ;; [:p :!!f17] ; Toggle System Proxy for ClashX
           [:p [:!!f17 :!!f4]] ; Toggle System Proxy and Enhance Mode for ClashX Pro
           [:g "/opt/homebrew/bin/goku"]
           [:r :!TOgrave_accent_and_tilde] ; rime deploy
           ;; [:y "/opt/homebrew/bin/yabai --restart-service"] ; https://github.com/koekeishiya/yabai/wiki/Tips-and-tricks#quickly-restart-the-yabai-launch-agent
           [:y "/usr/bin/pgrep yabai > /dev/null && /opt/homebrew/bin/yabai --stop-service || /opt/homebrew/bin/yabai --start-service"]

           ;; information
           [:n :!!f1] ; clock by Bartender 4 (n for notifications)
           ;; TODO f11 desktop

           ;; MonitorControl.app
           [:open_bracket :display_brightness_decrement]
           [:close_bracket :display_brightness_increment]
           [:m :mute]
           [:comma :volume_decrement]
           [:period :volume_increment]
           ]}

  {:des   "q mode (cmd+shift)"
   :rules [:q-mode
           [:1 :!CS1]
           [:2 :!CS2]
           [:3 :!CS3]
           [:4 :!CS4]
           [:5 :!CS5]
           [:6 :!CS6]
           [:7 :!CS7]
           [:8 :!CS8]
           [:9 :!CS9]
           [:0 :!CS0]
           [:hyphen :!CShyphen]
           [:equal_sign :!CSequal_sign]
           [:w :!CSw [:!Chrome :!Brave :!Helium :!Glide :!Dia :!Safari :!CitrixViewer]] ; accidentally close all tabs
           [:e :!CSe]
           [:r :!CSr]
           [:t :!CSt]
           [:y :!CSy]
           [:u :!CSu]
           [:i :!CSi]
           [:o :!CSo]
           [:p :!CSp]
           [:open_bracket :!CSopen_bracket]
           [:close_bracket :!CSclose_bracket]
           [:backslash :!CSbackslash]
           [:a :!CSa]
           [:s :!CSs]
           [:d :!CSd]
           [:f :!CSf]
           [:g :!CSg]
           [:h :!CSh]
           [:j :!CSj]
           [:k :!CSk]
           [:l :!CSl]
           [:semicolon :!CSsemicolon]
           [:quote :!CSquote]
           [:z :!CSz]
           [:x :!CSx]
           [:c :!CSc]
           [:v :!CSv]
           [:b :!CSb]
           [:n :!CSn]
           [:m :!CSm]
           [:comma :!CScomma]
           [:period :!CSperiod]
           [:slash :!CSslash]
           [:down_arrow :!CSdown_arrow]
           [:up_arrow :!CSup_arrow]
           [:left_arrow :!CSleft_arrow]
           [:right_arrow :!CSright_arrow]
           [:spacebar :!CSspacebar]
           [:return_or_enter :!CSreturn_or_enter]
           [:tab :!CStab]
           [:escape :!CSescape]
           [:grave_accent_and_tilde :!CSgrave_accent_and_tilde]
           [:delete_or_backspace :!CSdelete_or_backspace]
           ]}

  {:des   "tab mode (uiopjkl;m,./ to f1~f12)"
   :rules [:tab-mode
           [:##u :f1]
           [:##i :f2]
           [:##o :f3]
           [:##p :f4]
           [:##j :f5]
           [:##k :f6]
           [:##l :f7]
           [:##semicolon :f8]
           [:##m :f9]
           [:##comma :f10]
           [:##period :f11]
           [:##slash :f12]
           ]}

  {:des   "k2 mode (resize window, remap Rectangle.app)"
   :rules [:k2-mode
           [:return_or_enter :!TSOreturn_or_enter] ;; almost maximize
           [:spacebar :!TSOspacebar]               ;; maximize
           [:t :!TSOt]                             ;; center maximize
           [:r :!TOSr]                             ;; restore
           [:y :!TOSy]                             ;; upper left
           [:n :!TOSn]                             ;; lower left
           [:o :!TOSo]                             ;; upper right
           [:period :!TOSperiod]                   ;; lower right

           [:h :!TOSleft_arrow]  ;; left half
           [:l :!TOSright_arrow] ;; right half
           [:k :!TOSup_arrow]    ;; top half
           [:j :!TOSdown_arrow]  ;; bottom half

           ;; [:1 :!TOS1]                   ;; register 1
           ;; [:3 :!TOS3]                   ;; register 3
           ;; [:4 :!TOS4]                   ;; register 4
           ;; [:5 :!TOS5]                   ;; register 5
           ;; [:6 :!TOS6]                   ;; register 6
           ;; [:7 :!TOS7]                   ;; register 7
           ;; [:8 :!TOS8]                   ;; register 8
           ;; [:9 :!TOS9]                   ;; register 9
           ;; [:0 :!TOS0]                   ;; register 0

           [:hyphen :!TOShyphen]         ;; shrink
           [:equal_sign :!TOSequal_sign] ;; enlarge

           [:open_bracket :!TOSopen_bracket]   ;; prev display
           [:close_bracket :!TOSclose_bracket] ;; next display
           ]}

  {:des   "i mode (pairs: break, quote)"
   :rules [:i-mode
           [:a [:!Scomma :!Speriod :left_arrow]] ; <>
           [:s [:!S9 :!S0 :left_arrow]] ; ()
           [:d [:open_bracket :close_bracket :left_arrow]] ; []
           [:f [:!Sopen_bracket :!Sclose_bracket :left_arrow]] ; {}

           [:w [:grave_accent_and_tilde :grave_accent_and_tilde :left_arrow]] ; ``
           [:e [:quote :quote :left_arrow]] ; ''
           [:r [:!Squote :!Squote :left_arrow]] ; ""

           ;; snippets
           [:h :home_dir]
           [:q [:q :w :4 :5 :7 :8 :1 :2]]
           [:m [:q :w :4 :5 :7 :8 :1 :2 :!S2 :1 :6 :3 :period :c :o :m]]
           [:j [:j :k :d :f :l :f :j :!S2 :g :m :a :i :l :period :c :o :m]]
           ;; FIXME markdown url
           ;; [:u [:open_bracket :close_bracket :left_arrow :!Cv :right_arrow :!S9 :!S0 :left_arrow :!!f7] nil {:delayed {:invoked [:!C2]} :params {:delay 500}}] ; markdown url
           [:u [:open_bracket :!Cv :close_bracket :!S9 :!S0 :left_arrow :!!f7] nil {:delayed {:invoked [:!C2]} :params {:delay 500}}] ; markdown url
           [:p [:!Sa :period :s :o :u :t :tab :escape] :IntelliJ]
           [:p [:!Sa :period :p :r :i :n :t :tab :escape] :PyCharm]
           ]}

  #_{:des   "r mode (numbers)"
   :rules [:number-r-mode
           ;; [:##a :left_control]
           ;; [:##s :left_shift]
           ;; [:##d :left_option]
           ;; [:##f :left_command]
           ;; [:##semicolon :!Fdelete_or_backspace]
           [:##semicolon :delete_or_backspace]
           [:##o :9]
           [:##i :8]
           [:##u :7]
           [:##l :6]
           [:##k :5]
           [:##j :4]
           [:##m :1]
           [:##comma :2]
           [:##period :3]
           [:##h :0]]}

  ;; TODO 成本高：肌肉记忆、心智负担
  ;; https://github.com/narze/dotfiles/blob/dotbot/etc/karabiner.edn
  ;; ,-----------------------------------------------------------------------------------.
  ;; |                                         |      |   -  |   +  |   (  |   )  |      |
  ;; |------+------+------+------+------+-------------+------+------+------+------+------|
  ;; |                   N/A                   |   _  |   [  |   ]  |   {  |   }  |      |
  ;; |------+------+------+------+------+------|------+------+------+------+------+------|
  ;; |                                         |   =  |   |  |   <  |   >  |   ?  |      |
  ;; |------+------+------+------+------+------+------+------+------+------+------+------
  #_{:des   "e mode (symbols)"
   :rules [:symbol-e-mode
           [:u :hyphen]
           [:i :!Sequal_sign] ; +
           [:o :!S9] ; (
           [:p :!S0] ; )
           [:h :!Shyphen] ; _
           [:j :open_bracket]
           [:k :close_bracket]
           [:l :!Sopen_bracket] ; {
           [:semicolon :!Sclose_bracket] ; }
           [:n :equal_sign]
           [:m :!Sbackslash] ; |
           [:comma :!Scomma] ; <
           [:period :!Speriod] ; >
           [:slash :!Sslash] ; ?
           ]}

  {:des   "e mode (cmd+tab)"
   :rules [:e-mode
           ;; [:j :prev_app] ; cmd+tab
           ;; [:k :!CStab]
           [:j :!Otab] ; AltTab.app
           ;; [:k [:!Otab :!Oright_shift :!Oright_shift]]
           [:k :!Otab nil {:delayed {:invoked [:!Oright_shift :!Oright_shift]} :params {:delay 30}}]
           [:l :same_wind_app] ; cmd+`
           ]}

  {:des   "r mode (scrolling)"
   :rules [:r-mode
           [:j {:mkey {:vwheel -64}}]
           [:h {:mkey {:hwheel -64}}]
           [:k {:mkey {:vwheel 64}}]
           [:l {:mkey {:hwheel 64}}]]}

  ;; jk mk ji df jl kl nk
  ;; 减少 hjkl 延迟, 注掉
  {:des  "simultaneous keys (jk, mk)"
   :rules [
           ;; or jj to esc?
           [[:j :k] :escape]
           ;; [[:j :k] :escape nil {:params {:sim 50}}] ; sim 值越大, j 延迟越高
           ;; [[:k :l] :return_or_enter]

           ;; [[:j :l] :!!spacebar] ; Alfred Hotkey

           ;; TODO left-hand mode
           [[:m :k] :!!backslash] ; raycast://extensions/isfeng/easydict/easydict
           [[:n :k] :!!equal_sign] ; raycast://extensions/raycast/floating-notes/toggle-floating-notes-window

           ;; emacs-everywhere | https://github.com/tecosaur/emacs-everywhere
           ;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn
           [[:j :i] [:!Ca :!Cx "/opt/homebrew/bin/emacsclient --eval '(emacs-everywhere)'"] [:!vim-mode-disabled-application :!Emacs]]
           [[:j :i] [:!Tx :5 :0] :Emacs]
           ]}

  ;; or hold cmd+q for a while?
  ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#command-q-twice-to-quit-application
  {:des   "quit application by pressing command-q twice"
   :rules [[
            ;; <from> second cmd-q (when variable "command-q" is 1)
            :!C#Pq
            ;; <to>, 3 to action
            ;; 1. call cmd-q
            ;; 2. set variable "command-q" to 0
            ;; 3. cleanup the :cmdq notification (omit the thrid item to cleanup notification)
            [:!Cq ["command-q" 0] [:noti :cmdq]]
            ;; <condition> when variable "command-q" is 1
            ["command-q" 1]]


           [
            ;; <from> first cmd-q (when variable "command-q" is 0)
            :!C#Pq

            ;; <to>, 2 to action
            ;; 1. show notification with :id :cmdq, :text "Press Again to QUIT"
            ;; 2. set variable "command-q" to 1 (for the second press)
            [[:noti :cmdq "Press Again to QUIT"] ["command-q" 1]]

            ;; <condition> nil means no required condition
            nil

            ;; <additional-option>
            {
             ;; to_delayed_action documentation
             ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-delayed-action/
             :delayed {
                       ;; run 2 actions when no other key presses after basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "command-q" to 0
                       ;; 2. cleanup notification :id :cmdq
                       :invoked  [["command-q" 0] [:noti :cmdq]]

                       ;; run 2 actions when another key presses within basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "command-q" to 0
                       ;; 2. cleanup notification :id :cmdq
                       :canceled [["command-q" 0] [:noti :cmdq]]}

             :params  {
                       ;; basic.to_delayed_action_delay_milliseconds
                       :delay    500}}]]}

  ;; https://github.com/mmroczka/.dotfiles/blob/master/karabiner/karabiner.edn
  #_{:des   "Double colon triggers emoji search"
   :rules [[:!Ssemicolon [:delete_or_backspace :!TCspacebar ["emoji_mode" 0]] ["emoji_mode" 1]]
           [:!Ssemicolon ["emoji_mode" 1] nil {:alone :!Ssemicolon :delayed {:invoked ["emoji_mode" 0] :canceled ["emoji_mode" 0]}}]]}

  ;; TODO 改为在屏幕上下左右的中心点击一下鼠标
  ;; 组合键使用
  #_{:des   "right_command+ijkl to arrow"
   :rules [[:!Q##i :up_arrow]
           [:!Q##j :left_arrow]
           [:!Q##k :down_arrow]
           [:!Q##l :right_arrow]]}

  {:des   "right_command with right-hand keys to launch-mode"
   :rules [[:!Qh [:open "/Applications/企业微信.app"] :!WeWork]
           [:!Qh :!Ograve_accent_and_tilde :WeWork] ; AltTab.app
           [:!Qj :open-default-browser :!default-browser]
           [:!Qj :same_wind_app :default-browser]
           [:!Qk :open-default-terminal :!default-terminal]
           ;; [:!Qk :same_wind_app :default-terminal] ; not working for kitty
           [:!Qk "/opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows | /opt/homebrew/bin/jq -e \"map(select(.app==\\\"kitty\\\" and .\\\"has-focus\\\"==false)) | .[0] | .id\") > /dev/null 2>&1" :default-terminal]
           ;; [:!Qk [:open "/Applications/WezTerm.app"] :default-terminal]
           [:!Ql [:open "/Applications/Visual Studio Code.app"] :!VSCode]
           [:!Ql :same_wind_app :VSCode]
           ;; [:!Qsemicolon [:open "/Library/Application Support/Citrix Receiver/Citrix Viewer.app"]] ; Citrix Workspace.app
           [:!Qsemicolon "/opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows | /opt/homebrew/bin/jq -e \"map(select(.app==\\\"RemoteDesktopClient\\\")) | .[0] | .id\") > /dev/null 2>&1 || open /Applications/RuijieWorkSpace.app" :!RuijieWorkSpace]
           [:!Qsemicolon [:open "/Applications/RuijieWorkSpace.app"] :RuijieWorkSpace]
           ; [:!Qf [:open "/System/Library/CoreServices/Finder.app"] :!Finder]
           ; [:!Qf :same_wind_app :Finder]
           ;; [:!Qe [:open "/Applications/Emacs.app"] :!Emacs]
           ;; [:!Qe :same_wind_app :Emacs]
           [:!Qy [:open "$HOME/Applications/PyCharm Community Edition.app"] :!PyCharm]
           [:!Qy :same_wind_app :PyCharm]
           [:!Qu [:open "/Applications/Neovide.app"]] ; pronounce
           [:!Qi [:open "/Applications/IntelliJ IDEA CE.app"] :!IntelliJ]
           [:!Qi :same_wind_app :IntelliJ]
           [:!Qo [:open "/Applications/wpsoffice.app"]] ; office
           ; [:!Qo [:open "/Applications/LibreOffice.app"] :!LibreOffice] ; office
           ; [:!Qo :same_wind_app :LibreOffice]
           [:!Qp [:open "/System/Applications/Preview.app"] :!Preview]
           [:!Qp :same_wind_app :Preview]
           [:!Qn [:open "http://127.0.0.1:8080/"] nil {:delayed {:invoked [:escape]} :params {:delay 800}}] ; note
           [:!Qm [:open "/Applications/Thunderbird.app"] :!Thunderbird] ; email
           [:!Qm :same_wind_app :Thunderbird]
           [:!Qspacebar [:open "/Applications/KeePassXC.app"]]
           [:!Qgrave_accent_and_tilde [:open "/Applications/YesPlayMusic.app"]]
           [:!Qcomma [:open "/System/Applications/System Settings.app"]] ; cmd+, for setting
           [:!Qperiod [:open "/System/Applications/Launchpad.app"]] ; 启动台
           [:!Qslash [:open "/Applications/qutebrowser.app"]]
           [:!Qopen_bracket [:open "/Applications/Hillstone Secure Connect.app"]]
           [:!Qclose_bracket [[:open "/Applications/企业微信.app/Contents/Frameworks/wwmapp.app"] :same_wind_app] :!WeWork-Meeting] ; 企业微信•会议
           [:!Qclose_bracket :same_wind_app :WeWork-Meeting]
           ]}

  #_{:des   "Hold cmd+v for clipboard history by Maccy.app"
   :rules [[:!Cv nil nil {:alone :!Cv :held :!!f7 :repeat false :halt true :params {:alone 200 :held 200}}]]}

  #_{:des   "return_or_enter to control when pressed with other keys"
   :rules [[:##return_or_enter :left_control nil {:alone :return_or_enter}]]}

  {:des   "fn alone -> cmd+c"
   :rules [[:#Pfn :fn nil {:alone :!Cc}]]}

  ;; 和 iterm2 hotkey window 的 double cmd 快捷键冲突 ---> 改为 hyper+f18 (map to left_option alone)
  {:des   "left cmd alone -> cmd+tab"
   :rules [[:condi :!niz-x87-wired :!glove80]
           [:#Pleft_command :left_command nil {:alone :prev_app}]]} ; ":prev_app" is same as ":!Ctab"

  ;; right cmd -> cmd+`/rime/raycast/mouseCenter/return
  {:des   "right cmd alone -> toggle rime chinese/english"
   :rules [[:condi :!niz-x87-bt :!glove80]
           ;; [:#Pright_command :right_command nil {:alone [:hs ["mouseCenterClick"]]}]
           ;; `:##` or `:#P` ---> only `:#P` work for "For Apple-Internal-Keyboard\n- left cmd + right cmd -> raycast" below
           ;; [:##right_command :right_command :!Emacs {:alone :left_shift}] ; rime
           [:#Pright_command :right_command [:!Emacs :!Neovide] {:alone :right_control}] ; rime
           [:#Pright_command :right_command :Emacs {:alone :!Tbackslash}] ; emacs-rime
           ;; [:#Pright_command :right_command :Neovide {:alone :!Tperiod}] ; rime-ls
           ]}

  ;; TODO or press f twice to switch rime's english/chinese input? see "Double colon triggers emoji search" above
  ;; TODO "For NIZ" below
  ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#two-stroke-keybindings-emacs-c-x-mode
  #_{:des   "right cmd alone -> toggle rime's ascii_mode, right cmd twice -> mouse center click to active app"
   :rules [:!niz-x87-bt
           [
            ;; <from> second right_command (when variable "right-command" is 1)
            :#Pright_command

            ;; <to>
            [:right_command ["right-command" 0]] ; or move `["right-command" 0]` into `:afterup`
            ;; :right_command

            ;; <condition>
            ["right-command" 1]

            ;; <additional-option>
            {
             ;; [to_if_alone](https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-if-alone/)
             ;; run 3 actions when the <from> key is pressed alone
             ;; 1. send control+shift+] (toggle rime's ascii_mode back | ~/Library/Rime/default.custom.yaml)
             ;; 2. call hammerspoon URL event "mouseCenterClick"
             ;; 3. set variable "right-command" to 0
             ;; FIXME vscode 切换中英文经常不灵
             :alone   [:!TSclose_bracket [:hs ["mouseCenterClick"]] ["right-command" 0]] ; or move `["right-command" 0]` into `:afterup`
             ;; :alone   [:!TSclose_bracket [:hs ["mouseCenterClick"]]]

             ;; [to_after_key_up](https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-after-key-up/)
             ;; set variable "right-command" to 0 when the <from> key is released
             ;; :afterup ["right-command" 0]
             }]


           [
            ;; <from> first right_command (when variable "right-command" is 0)
            :#Pright_command

            ;; <to>
            :right_command

            ;; <condition>
            nil

            ;; <additional-option>
            {
             ;; run 2 actions when the <from> key is pressed alone
             ;; 1. send left_shift  (toggle rime's ascii_mode | ~/Library/Rime/default.yaml)
             ;; 2. set variable "right-command" to 1 (for the second press)
             ;; FIXME vscode 切换中英文经常不灵
             :alone   [:left_shift ["right-command" 1]]

             :delayed {
                       ;; set variable "right-command" to 0 when no other key presses after basic.to_delayed_action_delay_milliseconds
                       :invoked  ["right-command" 0]

                       ;; set variable "right-command" to 0 when another key presses within basic.to_delayed_action_delay_milliseconds
                       :canceled ["right-command" 0]}

             :params  {:delay    500}}]]}

  {:des   "left option alone -> tmux prefix"
   :rules [[:condi :!niz-x87-wired :!glove80]
           ;; [:left_option :left_option :!Terminals {:alone [:!!f18]}] ; left option alone -> hyper+f18 (iTerm2 Hotkey Window)
           [:#Pleft_option :left_option [:!tmux-autostart-terminals :!VSCode :!Cursor :!RuijieWorkSpace] {:alone :open-default-terminal}]
           [:#Pleft_option :left_option :tmux-autostart-terminals {:alone [:!Tb]}] ; tmux prefix
           [:#Pleft_option :left_option :VSCode {:alone [:!Tb]}] ; tmux prefix
           [:#Pleft_option :left_option :Cursor {:alone [:!Tb]}] ; tmux prefix
           [:#Pleft_option :left_option :RuijieWorkSpace {:alone [:!Tb]}] ; tmux prefix
           ]}

  ;; TODO right_option -> hyper/super-hyper(hyper+fn)/translate
  ;; TODO :super-hyper [:command :shift :control :option :fn]
  {:des   "right option alone -> mouse center click to active app"
   :rules [[:condi :!glove80 :!niz-x87-bt :!niz-x87-wired]
           ;; [:#Pright_option :right_option :translate-by-opt-shift-a-app {:alone [:!OSa]}]
           ;; [:#Pright_option :right_option :!translate-by-opt-shift-a-app {:alone [:!!backslash]}] ; raycast://extensions/isfeng/easydict/easydict
           [:#Pright_option :right_option nil {:alone [:hs ["mouseCenterClick"]]}]
           ]}

  ;; TODO 影响 double shift
  ;; FIXME vscode 切换中英文经常不灵
  ;; rime 中英切换 left_shift改为right_control | ~/Library/Rime/default.custom.yaml
  #_{:des   "left shift alone -> switch rime's english/chinese input"
   :rules [[:left_shift :left_shift nil {:alone :right_control}]]}
  ;; doomemacs: toggle-input-method (C-\) | https://github.com/DogLooksGood/emacs-rime
  ;; {:des   "left shift alone -> switch rime's english/chinese input"
  ;;  :rules [[:left_shift :left_shift :Emacs {:alone [:left_shift :!Tbackslash]}]]}
  #_{:des   "left shift alone -> switch rime's english/chinese input"
   :rules [[:left_shift :left_shift [:Emacs :!glove80] {:alone [:left_shift :!Tbackslash]}]]}
  {:des   "left shift alone -> copy"
   :rules [[:left_shift :left_shift :!glove80 {:alone :!Cc}]]}

  ;; TODO alone 修饰键 right_shift(状态开关 类似caps_lock 开关vi模式)
  ;; TODO noti like command-q
  ;; {:des   "right shift alone -> caps_lock (see \"caps_lock layer: vi mode\" below)"
  ;;  :rules [[:#Pright_shift :right_shift nil {:alone [:caps_lock]}]]}
  #_{:des   "right shift alone -> caps_lock (see \"caps_lock layer: vi mode\" below)"
   :rules [[:#Pright_shift :right_shift :!glove80 {:alone [:caps_lock]}]]}

;; ------------------------------ Fundamental ------------------------------
;; WARN: the order of rules matters, see "space to shift" below

  #_{:des   "caps_lock layer: vi mode"
   :rules [[:!P#Sj :!Pdown_arrow]
           [:!P#Sk :!Pup_arrow]
           [:!P#Sh :!Pleft_arrow]
           [:!P#Sl :!Pright_arrow]

           ;; TODO 不需要按住
           [:!Pv :!Pleft_shift] ; Vi Visual Mode
           [:!PRv [:!PCleft_arrow :!PCSright_arrow]] ; Highlight current line

           [:!P#Sb :!POleft_arrow]
           [:!P#Sw :!POright_arrow]
           [:!P#Se :!POright_arrow]

           ;; [:!P#Si :!PCleft_arrow]
           ;; [:!P#Sa :!PCright_arrow]
           ;; i/I/a/A -> exit this layer to input, inspired by https://github.com/zuorn/EmacsVim
           ;; FIXME caps_lock 触发了多次 -> try :lazy
           ;; [:!PSi [:!Pcaps_lock :!Cleft_arrow]]
           ;; [:!PRa [:!Pcaps_lock :!Cright_arrow]]
           [:!Pi :!Pcaps_lock]
           [:!Pa [:!Pright_arrow :!Pcaps_lock]]

           [:!P#S0 :!PTa]
           [:!P#S4 :!PTe]
           [:!PR#S4 :!PTe]
           [:!PT#Su :!Ppage_up]
           [:!PT#Sd :!Ppage_down]
           ;; TODO gg, see "Double colon triggers emoji search" above
           ;; notimeout ---> https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable
           ;; timeoutlen=delay ---> https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#two-stroke-keybindings-emacs-c-x-mode
           [:!P#Sg :!PCup_arrow]
           [:!PR#Sg :!PCdown_arrow]

           [:!Pslash :!PCf]

           [:!Px :!Pdelete_forward]
           [:!Pd :!PCx]
           [:!PRd [:!PCSright_arrow :!PCx]] ; D for d$
           [:!Py :!PCc]
           [:!PSy [:!PCSright_arrow :!PCc]] ; Y for y$
           [:!Pp :!PCv]
           [:!Pu :!PCz]
           [:!Pr :!PCSz]
           [:!PTr :!PCSz]

           ;; TODO esc -> caps_lock
           ;; [:!P##left_control :!Pleft_control [:hhkb-bt] {:alone [:!Pcaps_lock :escape]}]
           ;; [:!P##caps_lock :!Pleft_control [:!hhkb-bt] {:alone [:!Pcaps_lock :escape]}]
           ]}

  ;; 影响 vim 中使用 c-h 切换窗口 `map <C-h> <C-W>h`
  ;; {:des   "global C-h to backspace"
   ;; :rules [[:!Th :delete_or_backspace nil {:params {:alone 500 :held 500}}]]}

  #_{:des   "Emacs key bindings [control+keys] (rev 10)"
   :rules [[:!T#Sy :!Cv :!Emacs]
           :!emacs-mode-disable-app
           [:!Ob :!Oleft_arrow]
           [:!Of :!Oright_arrow]
           [:!Ow :!Cc]
           [:!T#Od :delete_forward :!Firefoxes]
           [:!T#Oh :delete_or_backspace]
           [:!T#SOw :!Odelete_or_backspace]
           ;; [:!T#Oi :tab]
           [:!T#Oopen_bracket :escape]
           [:!T#OSm :return_or_enter]
           [:!T#OSb :left_arrow]
           [:!T#OSf :right_arrow :!Games]
           [:!T#OSb :left_arrow]
           [:!T#OSn :down_arrow]
           [:!T#OSp :up_arrow]
           [:!T#Sv :page_down]
           [:!T#Sa :!Cleft_arrow]
           [:!T#Se :!Cright_arrow]]}

  ;; TODO ranger like keybinding for Finder
  {:des   "Finder: navigation"
   :rules [:Finder
           [:!Tj :down_arrow]
           [:!Tk :up_arrow]
           [:!Th :!Cup_arrow] ; Enclosing Folder
           [:!Tl :!Cdown_arrow]
           ;; [:!To :!Co] ; Open
           [:!To :!Copen_bracket] ; Back
           [:!Ti :!Cclose_bracket] ; Forward
           [:!Tg :!CSg] ; Go To Folder
           [:!Tgrave_accent_and_tilde :!CSh] ; Home
           [:!Tr :!CSf] ; Recents
           [:!Td :!COl] ; Downloads
           ]}

  {:des   "WeWork: chat message navigation"
   :rules [:WeWork
           [:!Tj :!COdown_arrow] ; select next unread chat message
           [:!Sreturn_or_enter :!Creturn_or_enter] ; new line in Sheet cells
           ]}

  {:des   "WeChat: chat message navigation"
   :rules [:WeChat
           [:!Tj :!COdown_arrow] ; select next unread chat message
           ]}

  #_{:des   "WPSOffice: paste without formatting"
   :rules [:WPSOffice
           [:!Cv :!COSv] ; 粘贴剪贴板内容并匹配周围文本的格式
           [:!Qv :!COSv]
           ]}

  {:des   "RuijieWorkSpace: f11 -> ctrl + alt + delete"
   :rules [:RuijieWorkSpace
           [:f10 :!TOdelete_forward] ; unlock
           ]}


  {:des   "Spotify: play navigation"
   :rules [:Spotify
           [:!Tj :!Cright_arrow] ; next
           [:!Tk :!Cleft_arrow] ; previous
           [:!Tl :!CSright_arrow] ; seek forward
           [:!Th :!CSleft_arrow] ; seek backward
           [:!Tu :!Cup_arrow] ; volume up
           [:!Td :!Cdown_arrow] ; volume down
           ]}

  ;; 影响 cmd+w 关闭 raycast
  #_{:des   "Kitty: tmux window manipulation"
   :rules [:tmux-autostart-terminals
           [:!Ct [:!Tb :c]] ; Cmd T -> tmux: new window
           [:!Cw [:!Tb :!S7]] ; Cmd W -> tmux: kill window
           ]}

  ;; behaves like doomemacs pdf-tools | ~/.config/doomemacs/.local/straight/repos/pdf-tools/lisp/pdf-view.el
  ;; https://github.com/xrisk/preview-vim/blob/master/preview-vim.json
  {:des   "Preview: doomemacs like keybindings"
   :rules [:Preview
           [:j :down_arrow]
           [:k :up_arrow]
           [:h :left_arrow]
           [:l :right_arrow]
           ;; ;; page_up/page_down not work, use arrow + scroll
           ;; [:u [:up_arrow :up_arrow :up_arrow :up_arrow :up_arrow
           ;;      :up_arrow :up_arrow :up_arrow :up_arrow :up_arrow
           ;;      :up_arrow :up_arrow :up_arrow :up_arrow :up_arrow
           ;;      {:mkey {:vwheel 32}}]]
           ;; ;; scroll down's delay is higher than scroll up
           ;; [:d [:down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      :down_arrow :down_arrow :down_arrow :down_arrow :down_arrow
           ;;      {:mkey {:vwheel -32}}]]
           [:u :!Oup_arrow] ; next page
           [:d :!Odown_arrow] ; previous page
           [:g :!Cup_arrow] ; first page
           [:!Rg :!Cdown_arrow] ; last page
           [:!To :!Copen_bracket] ; previous position
           [:!Ti :!Cclose_bracket] ; next position
           [:equal_sign :!Cequal_sign] ; Zoom In
           [:hyphen :!Chyphen] ; Zoom Out
           [:!Rw :!C9] ; Actual Size (doomemacs pdf-view-fit-width-to-window)
           [:!Sw :!C9] ; Actual Size
           [:w :!C9] ; Actual Size
           [:!Sh :!C0] ; Zoom to Fit (doomemacs pdf-view-fit-height-to-window)
           [:!Sp :!C0] ; Zoom to Fit (doomemacs pdf-view-fit-page-to-window)
           [:p :!C0] ; Zoom to Fit
           [:0 :!C0] ; Zoom to Fit (doomemacs pdf-view-scale-reset)
           [:q :!Cq] ; Quit
           [:x :!Cw] ; Close Window
           [:delete_or_backspace :!Cw] ; Close Window
           ]}

  {:des   "Activity Monitor: / -> filter"
   :rules [:ActivityMonitor
           [:slash :!COf] ; Filter Processes
           ]}

  {:des   "Neovide: distinguish <C-i> and <Tab>"
   :rules [:Neovide
           [:!Ti :!Oi]
           [:!Wi :!Oi]
           ]}

  {:des   "For Apple-Internal-Keyboard\n- left cmd + right cmd -> raycast"
   :rules [:macbook-internal
           [:!C#Pright_command :!!spacebar]
           [:!Q#Pleft_command :!!spacebar]]}

  ;; TODO \
  {:des   "For Glove80\n- backspace to space"
   :rules [:glove80
           ;; launch-mode before remap
           [:!Wdelete_or_backspace [:left_command [:open "/Applications/KeePassXC.app"]]] ; space
           [:!Wescape [:left_command [:open "/Applications/YesPlayMusic.app"]]] ; `

           ;; TODO delete cmd-c cmd-v rime ` = \ [ ]
           ;; TODO when need to be `:#P` instead of `:##`
           [:##delete_or_backspace :spacebar]
           ;; [:##delete_forward :delete_or_backspace]
           [:##delete_forward :tab]
           ;; [:##left_shift :left_command nil {:alone :prev_app}]
           [:##left_shift :delete_or_backspace :!Preview] ; see lshift-cmd-mode simlayer above
           [:##left_shift :!Cw :Preview] ; see "Preview: doomemacs like keybindings" above
           [:##right_shift :right_command nil {:alone :escape}]
           ;; [:!Qv :!COSv :WPSOffice] ; see "WPSOffice: paste without formatting" above
           [:!Qv [:left_command :!Sinsert] :CitrixViewer] ; for MTPuTTY, add left_command to prevent switching IME with cmd+shift
           ;; TODO: better way to cmd -> ctrl for RuijieWorkSpace
           [:!Qc :!Tc :RuijieWorkSpace] ; copy
           [:!Qv :!Tv :RuijieWorkSpace] ; paste
           [:!Qx :!Tx :RuijieWorkSpace]
           [:!Qa :!Ta :RuijieWorkSpace]
           [:!Qz :!Tz :RuijieWorkSpace]
           [:!Qw :!Tw :RuijieWorkSpace]
           [:!Qs :!Ts :RuijieWorkSpace]
           [:!Qf :!Tf :RuijieWorkSpace]
           [:!Qr :!Tr :RuijieWorkSpace]
           [:##left_option :left_option [:!tmux-autostart-terminals :!VSCode :!Cursor :!RuijieWorkSpace] {:alone :open-default-terminal}]
           [:##left_option :left_option :tmux-autostart-terminals {:alone [:!Tb]}] ; tmux prefix
           [:##left_option :left_option :VSCode {:alone [:!Tb]}] ; tmux prefix
           [:##left_option :left_option :Cursor {:alone [:!Tb]}] ; tmux prefix
           [:##left_option :left_option :RuijieWorkSpace {:alone [:!Tb]}] ; tmux prefix
           [:##right_option :right_option nil {:alone [:hs ["mouseCenterClick"]]}]
           [:##up_arrow :down_arrow]
           [:##down_arrow :up_arrow]
           [:##home :equal_sign :!Preview]
           [:##end :hyphen :!Preview]
           [:##home :equal_sign :Preview {:alone :!Cequal_sign}] ; Zoom In, see "Preview: doomemacs like keybindings" above
           [:##end :hyphen :Preview {:alone :!Chyphen}] ; Zoom Out, see "Preview: doomemacs like keybindings" above
           [:##escape :grave_accent_and_tilde]
           [:##grave_accent_and_tilde :left_shift nil {:alone :!Cc}] ; see "left shift alone" above

           ;; [:##left_control :left_control nil {:alone :tab}]
           [:##left_control :left_control nil {:alone :prev_app}]
           ;; TODO
           ; [:!T##j :down_arrow]
           ; [:!T##k :up_arrow]
           ; [:!T##h :left_arrow]
           ; [:!T##l :right_arrow]
           ; [:!T#Pa :!!f7] ; clipboard history by Maccy.app
           ; [:!T#Ps :!Cx]
           ; [:!T#Pd :!Cc]
           ; [:!T#Pf :!Cv]
           ;; see "d mode (tab navigation)" above
           [:!T#Pspacebar :same_wind_app] ; cmd+`
           ;; switch tabs in most apps
           [:!T#Pj :!CSclose_bracket [:!switch-tabs-by-ctrl-tab-app :!tmux-autostart-terminals :!Emacs :!WeWork :!WeChat]] ; Cmd Shift ]
           [:!T#Pk :!CSopen_bracket [:!switch-tabs-by-ctrl-tab-app :!tmux-autostart-terminals :!Emacs :!WeWork :!WeChat]] ; Cmd Shift [
           [:!T#Pj :!Ttab :switch-tabs-by-ctrl-tab-app] ; Ctrl Tab
           [:!T#Pk :!TStab :switch-tabs-by-ctrl-tab-app] ; Ctrl Shift Tab
           [:!T#Pj [:!Tb :!Tl] :tmux-autostart-terminals] ; tmux: next window
           [:!T#Pk [:!Tb :!Th] :tmux-autostart-terminals] ; tmux: previous window
           [:!T#Pj [:spacebar :b :n] :Emacs] ; doomemacs: next buffer
           [:!T#Pk [:spacebar :b :p] :Emacs] ; doomemacs: previous buffer
           [:!T#Pj :!Cdown_arrow :WeWork] ; wework: next chat message
           [:!T#Pk :!Cup_arrow :WeWork] ; wework: previous chat message
           [:!T#Pj :!Odown_arrow :WeChat] ; wechat: next chat message
           [:!T#Pk :!Oup_arrow :WeChat] ; wechat: previous chat message
           ;; create tab in most apps
           [:!T#Pn :!Ct [:!create-tab-by-cmd-n-app :!tmux-autostart-terminals :!Emacs]] ; Cmd t
           [:!T#Pn :!Cn :create-tab-by-cmd-n-app] ; Cmd n
           [:!T#Pn [:!Tb :c] :tmux-autostart-terminals] ; tmux: new window
           [:!T#Pn [:spacebar :b :!Sn] :Emacs] ; doomemacs: new empty buffer
           ;; switch sheets
           [:!T#Ph :!COopen_bracket :WPSOffice] ; wps: previous worksheet
           [:!T#Pl :!COclose_bracket :WPSOffice] ; wps: next worksheet
           ;; TODO tmux: previous pane
           [:!T#Ph [:!Tb :h :!Tb :k] :tmux-autostart-terminals] ; tmux: previous pane
           [:!T#Pl [:!Tb :o] :tmux-autostart-terminals] ; tmux: next pane
           [:!T#Ph [:spacebar :w :!Sw] :Emacs] ; doomemacs: previous window
           [:!T#Pl [:spacebar :w :w] :Emacs] ; doomemacs: next window
           ;; resize window, remap Rectangle.app
           [:!T#Pm :!TSOspacebar] ; maximize

           ;; right_control -> rime: toggle ascii punct | ~/Library/Rime/default.custom.yaml
           ;; TODO `:##` or `:#P`
           ;; [:##right_control :right_control :Emacs {:alone [:right_control :!Tbackslash]}] ; emacs-rime
           [:#Pright_control :right_control :Emacs {:alone :!Tbackslash}] ; emacs-rime
           ;; [:#Pright_control :right_control :Neovide {:alone [:right_control :!Tperiod]}] ; rime-ls
           ;; TODO launch-mode
           ;; TODO h, j, k, l -> yabai
           ;; TODO a, s, d, g, v
           ;; Add a left_command to avoid toggle rime's ascii_mode for frontmost application
           ;; (:!Wx will send a right_control, leave it alone will toggle rime's ascii_mode.
           ;; Add a left_command, like [:!Wx :same_wind_app :App],
           ;; will send right_control + left_command, which will not toggle rime's ascii_mode.)
           [:!Wh [:left_command [:open "/Applications/企业微信.app"]] :!WeWork]
           ; [:!Wh :!Ograve_accent_and_tilde :WeWork] ; AltTab.app (toggle rime's ascii_mode accidentally)
           [:!Wh :same_wind_app :WeWork]
           [:!Wj [:left_command :open-default-browser] :!default-browser]
           [:!Wj :same_wind_app :default-browser]
           [:!Wk [:left_command :open-default-terminal] :!default-terminal]
           ;; [:!Wk :same_wind_app :default-terminal] ; not working for kitty
           [:!Wk [:left_command "/opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows | /opt/homebrew/bin/jq -e \"map(select(.app==\\\"kitty\\\" and .\\\"has-focus\\\"==false)) | .[0] | .id\") > /dev/null 2>&1"] :default-terminal]
           ;; [:!Wk [:left_command [:open "/Applications/WezTerm.app"]] :default-terminal]
           [:!Wl [:left_command [:open "/Applications/Visual Studio Code.app"]] :!VSCode]
           [:!Wl :same_wind_app :VSCode]
           ;; [:!Wsemicolon [:left_command [:open "/Library/Application Support/Citrix Receiver/Citrix Viewer.app"]]] ; Citrix Workspace.app
           [:!Wsemicolon [:left_command "/opt/homebrew/bin/yabai -m window --focus $(/opt/homebrew/bin/yabai -m query --windows | /opt/homebrew/bin/jq -e \"map(select(.app==\\\"RemoteDesktopClient\\\")) | .[0] | .id\") > /dev/null 2>&1 || open /Applications/RuijieWorkSpace.app"] :!RuijieWorkSpace]
           [:!Wsemicolon [:left_command [:open "/Applications/RuijieWorkSpace.app"]] :RuijieWorkSpace]
           ; [:!Wquote [:open "/Applications/SwitchHosts.app"]]
           [:!Wa [:left_command [:open "/System/Applications/Utilities/Activity Monitor.app"]]]
           [:!Ws [:left_command [:open "/Applications/spotube.app"]]]
           [:!Wd [:left_command [:open "/Applications/DBeaver.app"]]]
           [:!Wf [:left_command [:open "/System/Library/CoreServices/Finder.app"]] :!Finder]
           [:!Wf :same_wind_app :Finder]
           ; [:!Wg [:open "/Applications/ChatGPT.app"] :!ChatGPT]
           ; [:!Wg :same_wind_app :ChatGPT]
           ;; pin https://chatgpt.com/ to first tab
           [:!Wg [:left_command :open-default-browser] nil {:delayed {:invoked [:!C1 :!CSo :!Cr]} :params {:delay 800}}]
           [:!We [:left_command [:open "/Applications/Emacs.app"]] :!Emacs]
           [:!We :same_wind_app :Emacs]
           [:!Wr [:left_command [:open "/Applications/Safari.app"]] :!Safari]
           [:!Wr :same_wind_app :Safari]
           [:!Wt [:left_command [:open "/Applications/iTerm.app"]] :!iTerm]
           [:!Wt :same_wind_app :iTerm]
           [:!Wy [:left_command [:open "$HOME/Applications/PyCharm Community Edition.app"]] :!PyCharm]
           [:!Wy :same_wind_app :PyCharm]
           [:!Wu [:left_command [:open "/Applications/Neovide.app"]]] ; pronounce
           [:!Wi [:left_command [:open "/Applications/IntelliJ IDEA CE.app"]] :!IntelliJ]
           [:!Wi :same_wind_app :IntelliJ]
           [:!Wo [:left_command [:open "/Applications/wpsoffice.app"]]] ; office
           ; [:!Wo [:left_command [:open "/Applications/LibreOffice.app"]] :!LibreOffice] ; office
           ; [:!Wo :same_wind_app :LibreOffice]
           [:!Wp [:left_command [:open "/System/Applications/Preview.app"]] :!Preview]
           [:!Wp :same_wind_app :Preview]
           [:!Wc [:left_command [:open "/Applications/Cursor.app"]] :!Cursor]
           [:!Wc :same_wind_app :Cursor]
           ;; [:!Wv [:left_command [:open "/Applications/Karabiner-EventViewer.app"]]]
           [:!Wv [:left_command [:open "/Applications/Neovide.app"]]]
           [:!Wb [:left_command [:open "/Applications/JetBrains Toolbox.app"]]]
           [:!Wn [:left_command [:open "http://127.0.0.1:8080/"]] nil {:delayed {:invoked [:escape]} :params {:delay 800}}] ; note
           [:!Wm [:left_command [:open "/Applications/Thunderbird.app"]] :!Thunderbird] ; email
           [:!Wm :same_wind_app :Thunderbird]
           [:!Wcomma [:left_command [:open "/System/Applications/System Settings.app"]]] ; cmd+, for setting
           [:!Wperiod [:left_command [:open "/System/Applications/Launchpad.app"]]] ; 启动台
           ; [:!Wslash [:open "/Applications/WhatPulse/WhatPulse.app"]]
           [:!Wslash [:left_command [:open "/Applications/qutebrowser.app"]]]
           [:!Wopen_bracket [:left_command [:open "/Applications/Hillstone Secure Connect.app"]]]
           [:!Wclose_bracket [:left_command [:open "/Applications/企业微信.app/Contents/Frameworks/wwmapp.app"] :same_wind_app] :!WeWork-Meeting] ; 企业微信•会议
           [:!Wclose_bracket :same_wind_app :WeWork-Meeting]
           ; [:!Wx [:open "/Applications/WeChat.app"]]

           ;; TODO
           [:left_command :left_command :translate-by-opt-shift-a-app {:alone :!OSa}]
           [:left_command :left_command :!translate-by-opt-shift-a-app {:alone :!!backslash}] ; raycast://extensions/isfeng/easydict/easydict

           [:##equal_sign :f11]
           [:##hyphen :f12]
           ]}

  {:des   "For Not HHKB\n- caps_lock to esc when pressed alone, to control as modifier\n- left_control to cmd+v when pressed alone, to hyper as modifier"
   :rules [[:condi :!hhkb-bt :!glove80]
           [:##caps_lock :left_control nil {:alone :escape}]
           [:##left_control :!CTOleft_shift nil {:alone :!Cv}]]}

  ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#device-input-method-application-conditions
  #_{:des   "# For Neither HHKB nor Apple-Internal-Keyboard\n- behaves like HHKB, swap delete_or_backspace and \\, but keep shift+\\ as |"
   :rules [[:condi :!hhkb-bt :!macbook-internal]
           ;; behaves like HHKB, swap delete_or_backspace and \
           [:##delete_or_backspace :backslash]
           ;; FIXME cmd+shift+delete
           [:#CTObackslash :delete_or_backspace] ; keep shift+\ as |
           ]}

  {:des   "For HHKB\n- left_control to esc when pressed alone\n- swap esc and `\n- shift+delete to |"
   :rules [:hhkb-bt
           [:##left_control :left_control nil {:alone :escape}]
           [:##escape :grave_accent_and_tilde] ; esc -> `
           ;; [:##grave_accent_and_tilde :backslash] ; ` -> \ (即左上角两个键都改为\)
           [:##grave_accent_and_tilde :escape] ; ` -> esc (组合键使用 shift+esc for IntelliJ IDEA, Raycast)
           [:!S#Pdelete_or_backspace :!Sbackslash] ; left_shift+delete -> |
           ]}

  {:des   "For NIZ: fix the wrong position of modifier keys"
   :rules [:niz-x87-bt
           [:##right_control :right_command nil {:alone [:hs ["mouseCenterClick"]]}] ; right_command, see "right cmd alone" above
           [:##right_command :right_option :translate-by-opt-shift-a-app {:alone [:!OSa]}] ; right_option, see "right option alone" above
           [:##right_command :right_option :!translate-by-opt-shift-a-app {:alone [:!!backslash]}] ; right_option, see "right option alone" above
           [:##right_option :!CTOleft_shift nil {:alone :!Cv}] ; right_ctrl see "For Not HHKB" above
           :niz-x87-wired
           [:##left_option :left_command nil {:alone :prev_app}] ; left_command, see "left cmd alone" above
           ;; [:##left_command :left_option :!Terminals {:alone [:!!f18]}] ; left_option, see "left option alone" above
           [:##left_command :left_option [:!tmux-autostart-terminals :!VSCode :!Cursor] {:alone :open-default-terminal}] ; left_option, see "left option alone" above
           [:##left_command :left_option :tmux-autostart-terminals {:alone [:!Tb]}] ; left_option, see "left option alone" above
           [:##left_command :left_option :VSCode {:alone [:!Tb]}] ; left_option, see "left option alone" above
           [:##left_command :left_option :Cursor {:alone [:!Tb]}] ; left_option, see "left option alone" above
           [:##right_option :right_command nil {:alone [:hs ["mouseCenterClick"]]}] ; right_command, see "right cmd alone" above
           [:##application :right_option :translate-by-opt-shift-a-app {:alone [:!OSa]}] ; right_option, see "right option alone" above
           [:##application :right_option :!translate-by-opt-shift-a-app {:alone [:!!backslash]}] ; right_option, see "right option alone" above
           [:##right_control :!CTOleft_shift nil {:alone :!Cv}] ; right_ctrl, see "For Not HHKB" above
           ]}

  ;; {:des "Kitty: quick access"
  ;;  :rules [[:!Ospacebar "/opt/homebrew/bin/kitten quick-access-terminal"]]}

  ;; inspired by chrome extension: Copy on Select
  ;; https://apple.stackexchange.com/questions/21595/can-i-copy-by-highlighting-and-paste-by-middle-click-on-mac-os-x
  ;; `:button1` and `{:pkey :button1}` both work for <to>, but only `{:pkey :button3}` work for <from>
  {:des   "mouse + keyboard: copy/paste"
   :rules [
           ;; option + click -> copy word
           ;; [:from-option-left-click [:button1 :button1 :!Cc]]
           [:from-option-left-click nil nil
            {:alone   [{:pkey :button1} {:pkey :button1} :!Cc]
             :held    {:pkey :button1 :modi :left_option :lazy true}
             :params  {:alone 250 :held 250}}]

           ;; command + click -> copy selected
           ;; [:from-command-left-click :button1 nil {:afterup :!Cc}]
           ;; TODO command + left click twice to copy a word
           [:from-command-left-click nil nil
            ;; command + left click 快速点击时不复制, 发送command + left click (IntelliJ, Chrome 跳转)
            ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/halt/
            {:alone   {:pkey :button1 :modi :left_command :lazy true :halt true}
             :held    {:pkey :button1}
             :afterup :!Cc
             ;; held 越短 command + left click 选择文本的延迟越低, 但是太短会导致快速点击时复制且不发送 command
             :params  {:alone 90 :held 90}}]

           ;; right click -> copy selected, see "hold right click -> copy selected, right click twice -> copy a word" below
           ;; [:from-right-click nil nil
           ;;  ;; right click 快速点击时不复制, 发送right click (右键菜单)
           ;;  {:alone   {:pkey :button2 :halt true}
           ;;   :held    {:pkey :button1}
           ;;   :afterup :!Cc
           ;;   ;; held 越短 right click 选择文本的延迟越低, 但是太短会导致快速点击时复制且将 right click 发送为 left click
           ;;   :params  {:alone 150 :held 150}}]

           ;; middle click -> paste
           ;; [:from-middle-click [{:pkey :button1} :!Cv]]
           [:from-middle-click nil nil
            {:alone   [{:pkey :button1} :!Cv]
             :held    [{:pkey :button1} :!Ca {:key :v :modi [:left_command] :lazy true :repeat false}] ; hold middle click to overwrite
             :params  {:alone 500 :held 500}}]]}

  {:des   "hold right click -> copy selected, right click twice -> copy a word"
   :rules [[
            ;; <from> second right-click (when variable "right-clicked" is 1)
            :from-right-click
            ;; <to>, 4 to action
            ;; 1. call left-click
            ;; 2. call left-click
            ;; 3. call cmd-c
            ;; 4. set variable "right-clicked" to 0
            [{:pkey :button1} {:pkey :button1} :!Cc ["right-clicked" 0]]
            ;; <condition> when variable "right-clicked" is 1
            ["right-clicked" 1]]


           [
            ;; <from> first right-click (when variable "right-clicked" is 0)
            :from-right-click

            ;; <to>, 1 to action
            ;; 1. set variable "right-clicked" to 1 (for the second press)
            [["right-clicked" 1]]

            ;; <condition> nil means no required condition
            nil

            ;; <additional-option>
            {
             ;; to_delayed_action documentation
             ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to-delayed-action/
             :delayed {
                       ;; run 1 actions when no other key presses after basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "right-clicked" to 0
                       :invoked  [["right-clicked" 0]]

                       ;; run 1 actions when another key presses within basic.to_delayed_action_delay_milliseconds
                       ;; 1. set variable "right-clicked" to 0
                       :canceled [["right-clicked" 0]]}

             ;; 单击right-click: 发送right-click本身 (右键菜单)
             ;; 经测试, :halt 不仅取消了 :afterup, 还取消了 :delayed, 故此处用 karabiner_cli 实现 :alone 触发后延时 set variable "right-clicked" to 0
             ;; :alone   [{:pkey :button2 :halt true} [:cli_set_var "right-clicked" "0"]] ; shell_command 本身就有一定延迟, 故此处不需要额外延时也可以实现 :alone 触发后延时 set variable "right-clicked" to 0
             :alone   [{:pkey :button2 :halt true} [:delay_cli_set_var "0.01" "right-clicked" "0"]]

             ;; 长按right-click: 发送left-click (选择文本)
             :held    {:pkey :button1}

             ;; 长按的right-click松开后: 发送cmd-c (复制已选择的文本)
             :afterup :!Cc

             :params  {
                       ;; basic.to_delayed_action_delay_milliseconds
                       :delay    150
                       ;; held 越短 right-click 选择文本的延迟越低, 但是太短会导致单击 right-click 时, 如果按下去的时间稍长就会发送 left-click 且松开后复制
                       :alone    125
                       :held     125}}]]}

  ;; TODO easy to accidentally trigger
  #_{:des   "trackpad + keyboard: copy/paste, vi mode"
   :rules [
           ;; s(when the finger is on the trackpad) -> copy word
           {:type       :basic
            :from       {:key_code :s}
            :to         [{:pointing_button :button1}
                         {:pointing_button :button1}
                         {:key_code :c :modifiers [:left_command] :lazy true}]
            :conditions [{:type  :variable_unless
                          :name  "multitouch_extension_finger_count_total"
                          :value 0}]}
           ;; d -> copy selected
           {:type       :basic
            :from       {:key_code :d}
            :to         [{:key_code :c :modifiers [:left_command] :lazy true}]
            :conditions [{:type  :variable_unless
                          :name  "multitouch_extension_finger_count_total"
                          :value 0}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :f}
           ;;  :to         [{:pointing_button :button1}
           ;;               {:key_code :v :modifiers [:left_command] :lazy true}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ;; f -> paste
           {:type            :basic
            :from            {:key_code :f}
            :to_if_alone     [{:pointing_button :button1}
                              {:key_code :v :modifiers [:left_command] :lazy true}]
            ;; hold f to overwrite
            :to_if_held_down [{:pointing_button :button1}
                              {:key_code :a :modifiers [:left_command] :lazy true}
                              {:key_code :v :modifiers [:left_command] :lazy true :repeat false}]
            :conditions      [{:type  :variable_unless
                               :name  "multitouch_extension_finger_count_total"
                               :value 0}]
            :parameters      {:basic.to_if_alone_timeout_milliseconds 500
                              :basic.to_if_held_down_threshold_milliseconds 500}}

           ;; [Multitouch Vi Mode](https://ke-complex-modifications.pqrs.org/#multitouch_vi_mode)
           ;; h/j/k/l to home/page_down/page_up/end when two fingers are on the trackpad
           ;; {:type       :basic
           ;;  :from       {:key_code :h :modifiers {:optional :any}}
           ;;  :to         [{:key_code :home}]
           ;;  :conditions [{:type  :variable_if
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 2}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :j :modifiers {:optional :any}}
           ;;  :to         [{:key_code :page_down}]
           ;;  :conditions [{:type  :variable_if
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 2}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :k :modifiers {:optional :any}}
           ;;  :to         [{:key_code :page_up}]
           ;;  :conditions [{:type  :variable_if
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 2}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :l :modifiers {:optional :any}}
           ;;  :to         [{:key_code :end}]
           ;;  :conditions [{:type  :variable_if
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 2}]}
           ;; h/j/k/l to arrow keys when the number of fingers on the trackpad is not zero or two
           ;; {:type       :basic
           ;;  :from       {:key_code :h :modifiers {:optional :any}}
           ;;  :to         [{:key_code :left_arrow}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :j :modifiers {:optional :any}}
           ;;  :to         [{:key_code :down_arrow}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :k :modifiers {:optional :any}}
           ;;  :to         [{:key_code :up_arrow}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :l :modifiers {:optional :any}}
           ;;  :to         [{:key_code :right_arrow}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}

           ;; e/r -> scroll up/down
           ;; {:type       :basic
           ;;  :from       {:key_code :r}
           ;;  :to         [{:mouse_key {:vertical_wheel -128}}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ;; {:type       :basic
           ;;  :from       {:key_code :e}
           ;;  :to         [{:mouse_key {:vertical_wheel 128}}]
           ;;  :conditions [{:type  :variable_unless
           ;;                :name  "multitouch_extension_finger_count_total"
           ;;                :value 0}]}
           ]}

  ;; WARN: the order of rules matters ---> try put this rules before :f-mode, then press f-space and hold f, release space and press space again
  ;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/to/lazy/
  ;; https://github.com/yqrashawn/yqdotfiles/blob/121c105d7851f3113eae9b51c27a4dc4f02b8d12/modules/yqrashawn/home-manager/dotfiles/karabiner.edn#L519
  ;; inspired by [The SpaceFN layout](https://geekhack.org/index.php?topic=51069.0)
  ;; The space bar does not auto-repeat. To compensate, space+left_shift (space is left_shift now, so space+left_shift is useless) is an autorepeating space.
  ;; {:des   "space to shift when pressed with other non-modifier keys (space+left_shift->space to compensate auto-repeat)"
  ;;  :rules [[:spacebar {:key :left_shift :lazy true} nil {:alone :spacebar}]
  ;;          [:!Sleft_shift :spacebar]]}
  ;; produce typo "likeThis", use simlayers instead, see "space mode (shift)" above
  #_{:des   "space to shift when pressed with other keys (space+left_shift->space to compensate auto-repeat)"
   :rules [[:##spacebar {:key :left_shift :lazy true} nil {:alone :spacebar}]
           [:!Sleft_shift :spacebar]]}

  ;; swap 后 shift+; 会触发鼠须管 shift 切换中英文
  {:des   "swap : and ;"
   :rules [[:#Psemicolon :!Ssemicolon]
           [:#Csemicolon :!Ssemicolon]
           [:#Tsemicolon :!Ssemicolon]
           [:#Osemicolon :!Ssemicolon]
           [:!Ssemicolon :semicolon]]}

  ;; swap " and '
  ]

 :devices            {:macbook-internal   [{:product_id 0 :vendor_id 0}]
                      :glove80            [{:vendor_id 5824 :product_id 10203}]
                      :hhkb-bt            [{:vendor_id 1278 :product_id 33}]
                      :niz-x87-bt         [{:vendor_id 1452 :product_id 272}]
                      :niz-x87-wired      [{:vendor_id 1155 :product_id 20785}] ; NIZ有线(USB)
                      }

 ;; osascript -e 'id of app "Finder"'
 ;; Karabiner-EventViewer.app ---> Frontmost Application
 :applications
 {
  :emacs-mode-disable-app
  ["^org\\.gnu\\.Emacs$" "^org\\.xquartz\\.X11$" "^org\\.gnu\\.AquamacsEmacs$"
   "^org\\.gnu\\.Aquamacs$" "^org\\.pqrs\\.unknownapp.conkeror$"
   "^com\\.microsoft\\.rdc$" "^com\\.microsoft\\.rdc\\.mac$"
   "^com\\.microsoft\\.rdc\\.macos$" "^com\\.microsoft\\.rdc\\.osx\\.beta$"
   "^net\\.sf\\.cord$" "^com\\.thinomenon\\.RemoteDesktopConnection$"
   "^com\\.itap-mobile\\.qmote$" "^com\\.nulana\\.remotixmac$"
   "^com\\.p5sys\\.jump\\.mac\\.viewer$"
   "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$" "^com\\.teamviewer\\.TeamViewer$"
   "^com\\.vmware\\.horizon$" "^com\\.2X\\.Client\\.Mac$"
   "^com\\.apple\\.Terminal$" "^com\\.googlecode\\.iterm2$"
   "^co\\.zeit\\.hyperterm$" "^co\\.zeit\\.hyper$" "^io\\.alacritty$" "^org\\.alacritty$"
   "^com\\.github\\.wez\\.wezterm$" "^net\\.kovidgoyal\\.kitty$" "^org\\.vim\\."
   "^com\\.qvacua\\.VimR$" "^com\\.vmware\\.fusion$" "^com\\.vmware\\.horizon$"
   "^com\\.vmware\\.view$" "^com\\.parallels\\.desktop$"
   "^com\\.parallels\\.vm$" "^com\\.parallels\\.desktop\\.console$"
   "^org\\.virtualbox\\.app\\.VirtualBoxVM$" "^com\\.vmware\\.proxyApp\\."
   "^com\\.parallels\\.winapp\\." "^org\\.x\\.X11$" "^com\\.apple\\.x11$"
   "^org\\.macosforge\\.xquartz\\.X11$" "^org\\.macports\\.X11$"
   "^com\\.sublimetext\\." "^com\\.microsoft\\.VSCode(Insiders)?$"
   "^com\\.jetbrains\\.intellij\\.ce$"
   "^com\\.jetbrains\\.pycharm\\.ce(-EAP)?$"
   "^com\\.neovide\\.neovide$"
   "^org\\.jkiss\\.dbeaver\\.core\\.product$"
   "^md\\.obsidian$" "^com\\.tidgi$"]
  :vim-mode-disabled-application
  ["^com\\.apple\\.Terminal$" "^com\\.googlecode\\.iterm2$"
   "^co\\.zeit\\.hyperterm$" "^co\\.zeit\\.hyper$" "^io\\.alacritty$" "^org\\.alacritty$"
   "^com\\.github\\.wez\\.wezterm$" "^net\\.kovidgoyal\\.kitty$" "^org\\.vim\\."
   "^com\\.qvacua\\.VimR$"
   "^com\\.microsoft\\.VSCode(Insiders)?$"
   "^com\\.todesktop\\.230313mzl4w4u92$"
   "^com\\.jetbrains\\.intellij\\.ce$"
   "^com\\.jetbrains\\.pycharm\\.ce(-EAP)?$"
   "^com\\.neovide\\.neovide$"
   "^org\\.jkiss\\.dbeaver\\.core\\.product$"
   "^md\\.obsidian$" "^com\\.tidgi$"]
  :switch-tabs-by-ctrl-tab-app
  ["^org\\.mozilla\\.thunderbird$" "^com\\.kingsoft\\.wpsoffice\\.mac$"
   "^com\\.citrix\\.receiver\\.icaviewer\\.mac$"]
  :create-tab-by-cmd-n-app
  ["^com\\.microsoft\\.VSCode(Insiders)?$" "^com\\.todesktop\\.230313mzl4w4u92$"]
  :line-navigating-by-cmd-arrow-app
  ["^com\\.google\\.Chrome$" "^com\\.brave\\.Browser$" "^net\\.imput\\.helium$"
   "^app\\.glide-browser\\.glide$" "^company\\.thebrowser\\.dia$"
   "^com\\.tencent\\.xinWeChat$"]
  :translate-by-opt-shift-a-app
  ["^com\\.google\\.Chrome$" "^com\\.brave\\.Browser$" "^net\\.imput\\.helium$"
   "^app\\.glide-browser\\.glide$" "^company\\.thebrowser\\.dia$" "^com\\.apple\\.Safari$"
   "^com\\.jetbrains\\.intellij\\.ce$" "^com\\.jetbrains\\.pycharm\\.ce(-EAP)?$"]
  :tmux-autostart-terminals
  ["^org\\.alacritty$" "^com\\.github\\.wez\\.wezterm$" "^net\\.kovidgoyal\\.kitty$"]
  :default-terminal ["^net\\.kovidgoyal\\.kitty$"]
  :default-browser  ["^app\\.glide-browser\\.glide$"]
  :Terminals        ["^com\\.apple\\.Terminal$"
                     "^com\\.googlecode\\.iterm2$"
                     "^co\\.zeit\\.hyperterm$" "^co\\.zeit\\.hyper$"
                     "^io\\.alacritty$" "^org\\.alacritty$"
                     "^com\\.github\\.wez\\.wezterm$"
                     "^net\\.kovidgoyal\\.kitty$"
                     ;; "^dev\\.warp\\.Warp.*"
                     ]
  :Alacritty        ["^org\\.alacritty$"]
  :Kitty            ["^net\\.kovidgoyal\\.kitty$"]
  :WezTerm          ["^com\\.github\\.wez\\.wezterm$"]
  :iTerm            ["^com\\.googlecode\\.iterm2$"]
  :Neovide          ["^com\\.neovide\\.neovide$"]
  :Emacs            ["^org\\.gnu\\.Emacs$" "^org\\.gnu\\.AquamacsEmacs$"
                     "^org\\.gnu\\.Aquamacs$"]
  :VSCode           ["^com\\.microsoft\\.VSCode$"]
  :Cursor           ["^com\\.todesktop\\.230313mzl4w4u92$"]
  :IntelliJ         ["^com\\.jetbrains\\.intellij\\.ce$"]
  :PyCharm          ["^com\\.jetbrains\\.pycharm\\.ce(-EAP)?$"]
  :Finder           ["^com\\.apple\\.finder$"]
  :Preview          ["^com\\.apple\\.Preview$"]
  :ActivityMonitor  ["^com\\.apple\\.ActivityMonitor$"]
  :Thunderbird      ["^org\\.mozilla\\.thunderbird$"]
  :Spotify          ["^com\\.spotify\\.client$"]
  :WeWork           ["^com\\.tencent\\.WeWorkMac$"]
  :WeWork-Meeting   ["^com\\.tencent\\.wwmapp$"]
  :WeChat           ["^com\\.tencent\\.xinWeChat$"]
  :CitrixViewer     ["^com\\.citrix\\.receiver\\.icaviewer\\.mac$"]
  :RuijieWorkSpace  ["^cn\\.com\\.ruijie\\.RuijieWorkSpace$"]
  :ChatGPT          ["^com\\.lencx\\.chatgpt$"]
  :V2rayN           ["^2dust\\.v2rayN$"]
  :WPSOffice        ["^com\\.kingsoft\\.wpsoffice\\.mac$"]
  :LibreOffice      ["^org\\.libreoffice\\.script$"]
  :Chrome           ["^com\\.google\\.Chrome$"]
  :Brave            ["^com\\.brave\\.Browser$"]
  :Helium           ["^net\\.imput\\.helium$"]
  :Glide            ["^app\\.glide-browser\\.glide$"]
  :Dia              ["^company\\.thebrowser\\.dia$"]
  :Safari           ["^com\\.apple\\.Safari$"]
  :Firefoxes        ["^org\\.mozilla\\.firefox$"
                     "^org\\.mozilla\\.firefoxdeveloperedition$"]
  :Games            ["^unity\\." "^com\\.Klei\\." "^unity\\.Klei\\."
                     "^org\\.Terraria"
                     "\\.rimworld$"
                     "Zomboid$"]}

 ;; simlayer-threshold 设置较高的值 ---> 会导致 w 等键有点卡顿，但可以减少快速输入时的误触
 ;; the default value is 250
 ;; :simlayer-threshold 500}
 :simlayer-threshold 250}
 ;; :simlayer-threshold 210}
 ;; :simlayer-threshold 150}


;; ------------------------------ cheatsheet ------------------------------
;; <from> section
;; :a      | normal key or predefined froms
;; :from-a | predefined froms
;; :!Ca    | special modifier key
;; [:a :b] | simultaneous key
;; {...}   | fallback to `froms` defination

;; <to> section
;; :a                        | normal key or predefined tos
;; :to-a                     | predefined tos
;; :!Ca                      | special modifier key
;; "ls"                      | shell command
;; [:a :b]                   | multiple normal key
;; ["vi-mode" 1]             | set variable, second element in vector isn't keyword
;; ["vi-mode" :a]            | shell command then insert a
;; [:launch-template "Mail"] | shell command then insert a
;; ["cd" "ls"]               | multeple shell command
;; [["vi-mode" 1] :a]        | set variable then insert a
;; [{...}]                   | fallback to `tos` defination

;; conflict
;; ["cd" "ls"]
;; set_variable to string or two shell_command
;; two shell_command cd & ls, cd && ls
;; ["cd" "ls"] | multeple shell command
;; [{:set ["variable name" "variable value"]}] | set variable's value to string (fallback to `tos` defination)

;; <conditions>
;; :chrome
;; [:vi-mode :hhkb :!chrome]
;; ["vi-mode" 1]
;; ["vi-mode" 0]
;; [:vi-mode ["w mode" 1] :!chrome]

;; <other options> section
;; to_if_alone                                    | :alone
;; to_if_held_down                                | :held
;; to_after_key_up                                | :afterup
;; to_delayed_action                              | :delayed
;;   to_if_canceled                               |   :cancled
;;   to_if_invoked                                |   :invoked
;; parameters                                     | :params
;;   basic.to_if_alone_timeout_milliseconds       |   :alone
;;   basic.to_if_held_down_threshold_milliseconds |   :held
;;   to_delayed_action_delay_milliseconds         |   :delay  FIXME should there be a "basic.", there's none on the spec page
