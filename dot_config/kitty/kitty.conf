# https://sw.kovidgoyal.net/kitty/conf/

# Fonts
font_family      Maple Mono NF CN
bold_font        Maple Mono NF CN Bold
italic_font      Maple Mono NF CN Italic
bold_italic_font Maple Mono NF CN Bold Italic
# https://github.com/subframe7536/maple-font/blob/variable/source/features/README.md
font_features MapleMono-NF-CN-Regular    +cv01 +cv35 +ss06
font_features MapleMono-NF-CN-Bold       +cv01 +cv35 +ss06
font_features MapleMono-NF-CN-Italic     +cv01 +cv35 +ss06
font_features MapleMono-NF-CN-BoldItalic +cv01 +cv35 +ss06
font_size 13.0
disable_ligatures cursor
# # chinese
# symbol_map U+4E00-U+9FFF,U+3400-U+4DBF Maple Mono NF CN
# # https://github.com/kovidgoyal/kitty/blob/272045287a74e82c9e6e653b7450095f78a9394b/docs/faq.rst?plain=1#L277
# symbol_map U+e000-U+e00a,U+ea60-U+ebeb,U+e0a0-U+e0c8,U+e0ca,U+e0cc-U+e0d7,U+e200-U+e2a9,U+e300-U+e3e3,U+e5fa-U+e6b7,U+e700-U+e8ef,U+ed00-U+efc1,U+f000-U+f2ff,U+f000-U+f2e0,U+f300-U+f381,U+f400-U+f533,U+f0001-U+f1af0 Symbols Nerd Font Mono

# Cursor
cursor_trail 3
cursor none

# Scrollback
scrollback_lines 10000
# alternatives:
# - https://github.com/mikesmithgh/kitty-scrollback.nvim
# - https://github.com/kovidgoyal/kitty/issues/719#issuecomment-2457162896
scrollback_pager nvim --cmd "lua vim.g.terminal_scrollback_pager = true" -c "lua require('util.terminal').colorize()"
# # https://github.com/kovidgoyal/kitty/issues/4774#issuecomment-1058266418
# scrollback_pager $SHELL -l -i -c 'nvim --cmd "lua vim.g.terminal_scrollback_pager = true" -c "lua U.terminal.colorize()"'

# Mouse
mouse_hide_wait 1.0
copy_on_select clipboard
mouse_map right press ungrabbed paste_from_clipboard
mouse_map right release ungrabbed no_op
mouse_map right click ungrabbed no_op
strip_trailing_spaces smart

# Terminal bell
enable_audio_bell no

# Window layout
hide_window_decorations titlebar-only

# Tab bar
tab_bar_style powerline
tab_powerline_style slanted
tab_title_max_length 25
# tab_title_template "{f'{title[:30]}…' if title.rindex(title[-1]) + 1 > 30 else (title.center(6) if (title.rindex(title[-1]) + 1) % 2 == 0 else title.center(5))}"
tab_title_template "{index} {title}{fmt.bold}{'  ' if num_windows > 1 and layout_name == 'stack' else ''}"

# Color scheme
background_image ~/.config/wall.png
background_image_layout scaled
background_tint 0.95

# Advanced
# shell /opt/homebrew/bin/fish --login --interactive

# OS specific tweaks
macos_option_as_alt both
macos_quit_when_last_window_closed yes
macos_show_window_title_in window

# Key Mappings
# map cmd+space launch --cwd=current --stdin-source=@screen_scrollback --type=tab
#   \ nvim -R --cmd "lua vim.g.terminal_scrollback_pager = true"
map cmd+space show_scrollback
map cmd+enter new_window_with_cwd
map cmd+m toggle_layout stack
map cmd+t new_tab_with_cwd
map cmd+j next_tab
map cmd+k previous_tab

map cmd+1 goto_tab 1
map cmd+2 goto_tab 2
map cmd+3 goto_tab 3
map cmd+4 goto_tab 4
map cmd+5 goto_tab 5
map cmd+6 goto_tab 6
map cmd+7 goto_tab 7
map cmd+8 goto_tab 8
map cmd+9 goto_tab 9
map cmd+0 goto_tab 10

# https://github.com/mrjones2014/smart-splits.nvim#kitty
allow_remote_control yes
listen_on unix:/tmp/mykitty
# #
# map ctrl+j neighboring_window down
# map ctrl+k neighboring_window up
# map ctrl+h neighboring_window left
# map ctrl+l neighboring_window right
# # unset the mapping to pass the keys to neovim
# map --when-focus-on var:IS_NVIM ctrl+j
# map --when-focus-on var:IS_NVIM ctrl+k
# map --when-focus-on var:IS_NVIM ctrl+h
# map --when-focus-on var:IS_NVIM ctrl+l
# map --when-focus-on var:KITTY_IN_TMUX ctrl+j
# map --when-focus-on var:KITTY_IN_TMUX ctrl+k
# map --when-focus-on var:KITTY_IN_TMUX ctrl+h
# map --when-focus-on var:KITTY_IN_TMUX ctrl+l
# the 3 here is the resize amount, adjust as needed
map ctrl+down kitten relative_resize.py down 3
map ctrl+up kitten relative_resize.py up 3
map ctrl+left kitten relative_resize.py left 3
map ctrl+right kitten relative_resize.py right 3
map --when-focus-on var:IS_NVIM ctrl+down
map --when-focus-on var:IS_NVIM ctrl+up
map --when-focus-on var:IS_NVIM ctrl+left
map --when-focus-on var:IS_NVIM ctrl+right
map --when-focus-on var:KITTY_IN_TMUX ctrl+down
map --when-focus-on var:KITTY_IN_TMUX ctrl+up
map --when-focus-on var:KITTY_IN_TMUX ctrl+left
map --when-focus-on var:KITTY_IN_TMUX ctrl+right

# ctrl+j/k for fzf
map ctrl+j kitten neighboring_window_or_pass_key.py bottom ctrl+j
map ctrl+k kitten neighboring_window_or_pass_key.py top ctrl+k
map ctrl+h kitten neighboring_window_or_pass_key.py left ctrl+h
map ctrl+l kitten neighboring_window_or_pass_key.py right ctrl+l

# distinguish <C-I> and <Tab> in neovim
map ctrl+i kitten ctrl_i_or_alt_i.py
# make <bs> close the lazygit
map backspace kitten bs_or_ctrl_h.py

# Theme
include ~/.config/tokyonight.nvim/extras/kitty/tokyonight_night.conf
