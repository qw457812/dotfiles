# https://github.com/sxyazi/yazi/blob/shipped/yazi-config/preset/keymap-default.toml
# https://yazi-rs.github.io/docs/configuration/keymap

[manager]

prepend_keymap = [
  # https://yazi-rs.github.io/docs/tips/#dropping-to-shell
  { on = "s", run = 'shell "$SHELL" --block', desc = "Open shell here" },
  # { on = "s", run = 'shell fish --block', desc = "Open shell here" },

  # https://yazi-rs.github.io/docs/tips/#smart-enter
  # https://yazi-rs.github.io/docs/faq#why-separate-open-enter
  { on = "l", run = "plugin smart-enter", desc = "Enter the child directory, or open the file" },

  # # https://yazi-rs.github.io/docs/tips#navigation-wraparound
  # { on = "k", run = "plugin arrow -1", desc = "Move cursor up (wraparound)" },
  # { on = "j", run = "plugin arrow 1", desc = "Move cursor down (wraparound)" },

  # # https://yazi-rs.github.io/docs/tips#parent-arrow
  # { on = "K", run = "plugin parent-arrow -1", desc = "Navigation in the parent directory without leaving the CWD" },
  # { on = "J", run = "plugin parent-arrow 1", desc = "Navigation in the parent directory without leaving the CWD" },

  # Tabs
  { on = "K", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "J", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  { on = "<Up>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "<Down>", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  { on = "[", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
  { on = "]", run = "tab_swap 1", desc = "Swap current tab with next tab" },

  # Seeking
  { on = "<C-b>", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = "<C-f>", run = "seek 5", desc = "Seek down 5 units in the preview" },

  { on = "<C-o>", run = "back", desc = "Go back to the previous directory" },
  { on = "<Tab>", run = "forward", desc = "Go forward to the next directory (<C-i>)" },
  { on = "<Left>", run = "back", desc = "Go back to the previous directory" },
  { on = "<Right>", run = "forward", desc = "Go forward to the next directory" },

  # Spotting
  { on = [
    "g",
    "k",
  ], run = "spot", desc = "Spot hovered file" },

  # https://github.com/dedukun/bookmarks.yazi
  # h: ~
  # d: ~/Downloads
  # c: ~/.local/share/chezmoi/dot_config
  # C: ~/.config
  # n: ~/.local/share/chezmoi/dot_config/nvim
  # N: ~/.config/nvim
  # l: ~/.local/share/nvim/lazy/LazyVim
  # z: ~/.local/share/chezmoi
  { on = "m", run = "plugin bookmarks save", desc = "Save current position as a bookmark" },
  { on = "'", run = "plugin bookmarks jump", desc = "Jump to a bookmark" },
  { on = [
    "g",
    "h",
  ], run = "noop" },
  { on = [
    "g",
    "c",
  ], run = "noop" },
  { on = [
    "g",
    "d",
  ], run = "noop" },

  { on = "<Esc>", run = [
    "escape",
    "unyank",
  ], desc = "Exit visual mode, clear selected, or cancel search, or cancel yank status" },

  # Operation
  # { on = [
  #   "y",
  #   "y",
  # ], run = "yank", desc = "Yank selected files (copy)" }, # TODO: `y` in visual mode
  # https://github.com/orhnk/system-clipboard.yazi
  { on = "<C-y>", run = "plugin system-clipboard", desc = "Yank to clipboard" },      # candidates: Y <C-y> gy
  { on = "<C-p>", run = "shell --block -- cb paste", desc = "Paste from clipboard" }, # candidates: P <C-p> gp
  # { on = [
  #   "d",
  #   "d",
  # ], run = "remove", desc = "Trash selected files" }, # TODO: `d` in visual mode
  # swap : and ; by karabiner
  { on = ":", run = "shell --interactive", desc = "Run a shell command" },
  { on = ";", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },

  # Selection
  { on = ",", run = [
    "toggle",
    "arrow 1",
  ], desc = "Toggle the current selection state" },

  # Leader key
  { on = [
    "<Space>",
    "<Space>",
  ], run = "search --via=fd", desc = "Search files by name via fd" },
  # TODO: S
  { on = [
    "<Space>",
    "/",
  ], run = "search --via=rg", desc = "Search files by content via ripgrep" },
  # https://yazi-rs.github.io/docs/tips/#macos-quick-look
  { on = [
    "<Space>",
    ",",
  ], run = 'shell -- qlmanage -p "$@"', desc = "Macos Quick Look" },
  { on = [
    "<Space>",
    "<Backspace>",
  ], run = "quit", desc = "Exit the process" },
  # https://github.com/yazi-rs/plugins/tree/main/diff.yazi
  { on = [
    "<Space>",
    "D",
  ], run = 'plugin diff', desc = "Diff the selected with the hovered file" },
  { on = [
    "c",
    "c",
  ], run = "noop" },
  { on = [
    "<Space>",
    "f",
    "y",
  ], run = "copy path", desc = "Copy the file path" },
  { on = [
    "c",
    "f",
  ], run = "noop" },
  { on = [
    "<Space>",
    "f",
    "Y",
  ], run = "copy filename", desc = "Copy the filename" },
  # https://github.com/yazi-rs/plugins/tree/main/mount.yazi
  { on = [
    "<Space>",
    "f",
    "m",
  ], run = "plugin mount", desc = "Mount Manager" },
  { on = [
    "<Space>",
    "g",
    "g",
  ], run = "shell --block lazygit", desc = "Lazygit" },
  { on = [
    "<Space>",
    "g",
    "f",
  ], run = 'shell --block -- lazygit -f "$0"', desc = "Lazygit Current File History" },
  { on = [
    "<Space>",
    "g",
    "l",
  ], run = 'shell --block -- lazygit log', desc = "Lazygit Log" },
  { on = [
    "<Space>",
    "<Tab>",
    "<Tab>",
  ], run = "tab_create --current", desc = "Create a new tab with CWD" },
  { on = [
    "<Space>",
    "<Tab>",
    "d",
  ], run = "close", desc = "Close the current tab, or quit if it is last tab" },
]

append_keymap = [
  # https://github.com/yazi-rs/plugins/tree/main/smart-filter.yazi
  { on = "F", run = "plugin smart-filter", desc = "Smart filter" },

  # https://yazi-rs.github.io/docs/configuration/keymap#manager.shell
  { on = "e", run = 'shell --block -- ${EDITOR:=vi} "$@"', desc = "Edit the selected files use $EDITOR" },
  { on = "E", run = 'shell -- open -a /Applications/Emacs.app "$@"', desc = "Edit the selected files use Emacs.app" },

  { on = "<Backspace>", run = "close", desc = "Close the current tab, or quit if it is last tab" },

  # TODO: cc A
  # https://github.com/hankertrix/augment-command.yazi
  # https://github.com/hankertrix/Dotfiles/blob/80c1948cc4aea98c89dd18ba8a92aa4f48499077/.config/yazi/keymap.toml#L219
  { on = "I", run = "rename --cursor=start", desc = "Rename file at the start of the file name" },

  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },

  # TODO: .
  { on = [
    "g",
    ".",
  ], run = "hidden toggle", desc = "Toggle the visibility of hidden files" },

  # # https://github.com/mikavilpas/yazi.nvim/blob/main/documentation/yazi-keymappings.md#define-a-keymap-in-yazis-config-1
  # # Augment https://yazi-rs.github.io/docs/tips/#cd-to-git-root
  # # go to the nvim cwd when neovim is open, and to the git root when it is not
  # { on = [
  #   "g",
  #   "r",
  # ], run = 'shell -- ya emit cd "${NVIM_CWD:-$(git rev-parse --show-toplevel 2>/dev/null)}"', desc = "cd to nvim cwd / git root" },
  { on = [
    "g",
    "r",
  ], run = 'shell -- ya emit cd "$(git rev-parse --show-toplevel)"', desc = "cd to git root" },

  # https://github.com/dedukun/bookmarks.yazi
  { on = [
    "b",
    "d",
  ], run = "plugin bookmarks delete", desc = "Delete a bookmark" },
  { on = [
    "b",
    "D",
  ], run = "plugin bookmarks delete_all", desc = "Delete all bookmarks" },

  # Linemode
  { on = [
    "g",
    "m",
    "s",
  ], run = "linemode size", desc = "Linemode: size" },
  { on = [
    "g",
    "m",
    "p",
  ], run = "linemode permissions", desc = "Linemode: permissions" },
  { on = [
    "g",
    "m",
    "b",
  ], run = "linemode btime", desc = "Linemode: btime" },
  { on = [
    "g",
    "m",
    "m",
  ], run = "linemode mtime", desc = "Linemode: mtime" },
  { on = [
    "g",
    "m",
    "o",
  ], run = "linemode owner", desc = "Linemode: owner" },
  { on = [
    "g",
    "m",
    "n",
  ], run = "linemode none", desc = "Linemode: none" },

  # Sorting
  { on = [
    "g",
    "s",
    "m",
  ], run = [
    "sort mtime --reverse=no",
    "linemode mtime",
  ], desc = "Sort by modified time" },
  { on = [
    "g",
    "s",
    "M",
  ], run = [
    "sort mtime --reverse",
    "linemode mtime",
  ], desc = "Sort by modified time (reverse)" },
  { on = [
    "g",
    "s",
    "b",
  ], run = [
    "sort btime --reverse=no",
    "linemode btime",
  ], desc = "Sort by birth time" },
  { on = [
    "g",
    "s",
    "B",
  ], run = [
    "sort btime --reverse",
    "linemode btime",
  ], desc = "Sort by birth time (reverse)" },
  { on = [
    "g",
    "s",
    "e",
  ], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = [
    "g",
    "s",
    "E",
  ], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
  { on = [
    "g",
    "s",
    "a",
  ], run = "sort alphabetical --reverse=no", desc = "Sort alphabetically" },
  { on = [
    "g",
    "s",
    "A",
  ], run = "sort alphabetical --reverse", desc = "Sort alphabetically (reverse)" },
  { on = [
    "g",
    "s",
    "n",
  ], run = "sort natural --reverse=no", desc = "Sort naturally" },
  { on = [
    "g",
    "s",
    "N",
  ], run = "sort natural --reverse", desc = "Sort naturally (reverse)" },
  { on = [
    "g",
    "s",
    "s",
  ], run = [
    "sort size --reverse=no",
    "linemode size",
  ], desc = "Sort by size" },
  { on = [
    "g",
    "s",
    "S",
  ], run = [
    "sort size --reverse",
    "linemode size",
  ], desc = "Sort by size (reverse)" },
  { on = [
    "g",
    "s",
    "r",
  ], run = "sort random --reverse=no", desc = "Sort randomly" },
]

[tasks]

append_keymap = [
  { on = "<Backspace>", run = "close", desc = "Close task manager" },

  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },
]

[spot]

prepend_keymap = [
  # Copy
  { on = ["c", "c"], run = "noop" },
  { on = ["y", "y"], run = "copy cell", desc = "Copy selected cell" },
]

append_keymap = [
  { on = "<Backspace>", run = "close", desc = "Close the spot" },
  { on = [
    "g",
    "k",
  ], run = "close", desc = "Close the spot" },

  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },
]

[pick]

append_keymap = [
  { on = "<Backspace>", run = "close", desc = "Cancel pick" },

  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },
]

[input]

prepend_keymap = [
  # # https://yazi-rs.github.io/docs/tips/#close-input-by-esc
  # # Close input by once `Esc` press (without entering Vi mode)
  # { on = "<Esc>", run = "close", desc = "Cancel input" },
]

append_keymap = [
  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },

  # Line-wise movement
  { on = "H", run = "move first-char", desc = "Move to the first non-whitespace character" },
  { on = "L", run = "move eol", desc = "Move to the EOL" },

  { on = "U", run = "redo", desc = "Redo the last operation" },
]

[confirm]

append_keymap = [
  { on = "<Backspace>", run = "close", desc = "Cancel the confirm" },

  { on = [
    "g",
    "?",
  ], run = "help", desc = "Open help" },
]

[completion]

append_keymap = [{ on = ["g", "?"], run = "help", desc = "Open help" }]

[help]

append_keymap = [
  { on = "<Backspace>", run = "close", desc = "Hide the help" },
  { on = "~", run = "close", desc = "Hide the help" },
  { on = ["g", "?"], run = "close", desc = "Hide the help" },

  # Navigation
  { on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },
  { on = "G", run = "arrow 99999999", desc = "Move cursor to the bottom" },

  # Filtering
  { on = "/", run = "filter", desc = "Apply a filter for the help items" },
]
