# flypy.schema.yaml的补丁文件是flypy.custom.yaml
# ------------------------------------------------------------------------------------------
# 小鹤音形Rime鼠须管挂接 | https://help.flypy.com/#/gj
# ------------------------------------------------------------------------------------------
# 功能与安卓TR版类似 [2.7 安卓TR版（停更） · 小鹤音形](https://www.kancloud.cn/flypy/xhrm/1960611)
# ------------------------------------------------------------------------------------------
# 如何禁用表情包: 暂时需要注释掉 flypy_sys.txt 中的 emoji 部分
patch:
  switches:
    - name: ascii_mode
      # reset: 0
      reset: 1 # 默认英文输入开始
      # states: [ 中文, 英文 ]
      states: [ 中, A ]
    - name: full_shape
     # states: [ 半角, 全角 ]
    - name: simplification
     # states: [ 简, 繁 ]
      reset: 0
    - name: ascii_punct
     # states: [ 。，, ．， ]
      states: [ ¥, $ ]
      reset: 0

  engine:
    processors:
      - ascii_composer
      - recognizer
      - key_binder
      - speller
      - punctuator
      - selector
      - navigator
      - express_editor
    segmentors:
      - ascii_segmentor
      - matcher
      - abc_segmentor
      - punct_segmentor
      - fallback_segmentor
    translators:
      - punct_translator
      - table_translator
      - lua_translator@date_translator # 使用rime-ice同名的date_translator
      # - lua_translator@time_translator # rime-ice的date_translator包含time
      - table_translator@custom_phraseVD
      - table_translator@custom_phraseXT
      - table_translator@custom_phraseYH
      - table_translator@custom_phraseQMZ
      - reverse_lookup_translator
      # 禁用快符中的;f重复上屏功能
      # - history_translator@history
      # https://github.com/hchunhui/librime-lua/wiki/Scripting#%E6%96%B0%E7%89%88-librime-lua
      # 避免在 rime.lua 中增加 `calculator_translator = require("calculator_translator")`
      # - lua_translator@calculator_translator
      # 禁用计算器（= 号） | lua/calculator_translator.lua
      # - lua_translator@*calculator_translator
    filters:
      - simplifier
      - simplifier@simplification
      - uniquifier

  # 禁用快符（分号键）
  # 生僻字是前三码加单引号打出: aof' ---> 嶅
  speller/alphabet: "abcdefghijklmnopqrstuvwxyz'"
  speller/initials: 'abcdefghijklmnopqrstuvwxyz'

  # translator/enable_completion: true # 编码提示开关

  # 禁用快符中的;f重复上屏功能
  # history:
  #    input: ;f
  #    size: 1 #重复前几次上屏
  #    initial_quality: 1 #首选
  history: {}

  # 初学模式
  # custom_phraseQMZ/user_dict: flypy_full全码字

  key_binder:
    import_preset: default #方案切换相关
    bindings:
      - {accept: bracketleft, send: Page_Up, when: paging} # [上翻页
      - {accept: bracketright, send: Page_Down, when: has_menu} # ]下翻页
      - {accept: comma, send: comma, when: paging} #注销逗号翻页
      - {accept: period, send: period, when: has_menu} #注销句号翻页
      - {accept: semicolon, send: 2, when: has_menu} #分号次选
    #  - {accept: Release+semicolon, send: semicolon, when: has_menu} #如启用此行，则分号引导符号功能无效
      - {accept: Release+period, send: period, when: composing} #句号顶屏
      - {accept: Release+comma, send: comma, when: composing} #逗号顶屏
      - {accept: "Tab", send: Escape, when: composing}
      - {accept: "Shift_R", send: Escape, when: composing}
      # - {accept: "Shift+space", toggle: full_shape, when: always} #切换全半角
      # - {accept: "Control+period", toggle: ascii_punct, when: always} #切换中英标点
      # - {accept: "Control+j", toggle: simplification, when: always} #切换简繁

  recognizer:
    # import_preset: default
    patterns:
      #uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
      uppercase: "" #中文状态大写锁定直接上屏
      reverse_lookup: "[a-z`]*`+[a-z`]*"
      punct: ""
      # 禁用计算器（= 号） | lua/calculator_translator.lua
      # expression: "^=.*$"

  # 根据小鹤音形挂接中的rime.lua，配置rime-ice的date_translator (copy from double_pinyin_flypy.schema.yaml)
  # Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
  date_translator:
    date: orq             # 日期： 2022-11-29
    time: ouj             # 时间： 18:13
    week: ""              # 星期： 星期二
    datetime: ""          # ISO 8601： 2022-11-29T18:13:11+08:00
    timestamp: ""         # 时间戳： 1669716794

  # https://github.com/kchen0x/rime-crane/blob/main/flypy.schema.yaml
  style:
    color_scheme: crane
    color_scheme_dark: crane
    # 鼠须管盲打，嵌入首选
    alpha: 0.0001
    inline_candidate: true

# ------------------------------------------------------------------------------------------
# 小鹤音形“鼠须管”for macOS.zip (1.9MB ios仓输入法可使用 2023/1/13 12:20:51) | _______挂接——音形码 | http://flypy.ysepan.com/
# ------------------------------------------------------------------------------------------
# ❯ tree 小鹤音形Rime平台鼠须管for\ macOS
# 小鹤音形Rime平台鼠须管for macOS
# ├── MAC鼠须管小鹤音形挂接说明.txt
# └── rime
#     ├── build
#     │   ├── flypy.prism.bin
#     │   ├── flypy.reverse.bin
#     │   ├── flypy.table.bin
#     │   ├── flypydz.prism.bin
#     │   ├── flypydz.reverse.bin
#     │   └── flypydz.table.bin
#     ├── default.custom.yaml
#     ├── default.yaml
#     ├── flypy.schema.yaml
#     ├── flypy_full全码字.txt
#     ├── flypy_sys.txt
#     ├── flypy_top.txt
#     ├── flypy_user.txt
#     ├── lua
#     │   └── calculator_translator.lua
#     ├── rime.lua
#     ├── squirrel.custom.yaml
#     └── squirrel.yaml
# 
# 4 directories, 18 files
# ------------------------------------------------------------------------------------------
# ❯ cat 小鹤音形Rime平台鼠须管for\ macOS/MAC鼠须管小鹤音形挂接说明.txt
#                 小鹤音形Rime鼠须管挂接说明 macOS系统
# 
# 一、Rime平台鼠须管下载地址：
# 
#    https://rime.im/download/
#    
#    请到此地址下载鼠须管目前最新版0.14.0   （2019年6月23日），并安装
# 
# 二、挂接小鹤音形
# 
# 1、在桌面顶部的菜单栏中输入法选择“鼠须管”，然后点开输入法菜单选择“用户设定”，弹开Rime文件夹
# 
# 2、将本压缩包rime文件夹中的“文件及文件夹”全部复制到上面打开的Rime文件夹内，覆盖同名文件
#   
# 3、回到鼠须管菜单，点击“重新部署”即完成
# 
#  sys——含符号编码、二重简码等
#  top——置顶词库，当用户词和系统词重码，且需要用户词居前时放此文件
#  user——用户词库，日常使用用户词添加到此文件
#  full——<全码字>分类文件，需删除文件名中的“全码字”，再部署生效，补全所有字全码
#  build文件夹内为码表文件
# 
# 三、常用组合键：
# 
# Ctrl+.     切换中英文标点
# Shift+空格 切换全半角
# Control+j 简繁转换
# 
# 四、当前日期orq，当前时间ouj
# 
# 五、万能键 `
# 
# 这个键在tab键上方，用于反查编码，替代单字全码“声韵形形”中的任何一码
# 
# 备注：
#     ①修改文件后，重新部署方能生效
#     ②用户词库自行备份
# 
# 
#                                                   小鹤官网：https://flypy.com
#                                                   小鹤Q群：182883808
# ------------------------------------------------------------------------------------------
# ❯ cat 小鹤音形Rime平台鼠须管for\ macOS/rime/default.yaml
# # Rime default settings
# # encoding: utf-8
# 
# config_version: "0.38"
# 
# schema_list:
#   - schema: flypy
# 
# switcher:
#   caption: 〔方案选单〕
#   hotkeys:
#     - Control+grave
#     - Control+Shift+grave
#     - F4
#   save_options:
#     - full_shape
#     - ascii_punct
#     - simplification
#   fold_options: true
#   abbreviate_options: true
#   #option_list_separator: '／'
# 
# menu:
#   page_size: 5
# 
# punctuator:
#   full_shape:
#     ' ' : { commit: '　' }
#     ',' : { commit: ， }
#     '.' : { commit: 。 }
#     '<' : [ 《, 〈, «, ‹ ]
#     '>' : [ 》, 〉, », › ]
#     '/' : { commit: 、 }
#     '?' : { commit: ？ }
#     ';' : { commit: ； }
#     ':' : { commit: ： }
#     '''' : { pair: [ '‘', '’' ] }
#     '"' : { pair: [ '“', '”' ] }
#     '\' : { commit: 、 }
#     '|' : '｜'
#     '`' : ｀
#     '~' : ～
#     '!' : { commit: ！ }
#     '@' : '＠'
#     '#' : '＃'
#     '%' : '％'
#     '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤' ]
#     '^' : { commit: …… }
#     '&' : ＆
#     '*' : '＊'
#     '(' : （
#     ')' : ）
#     '-' : －
#     '_' : ——
#     '+' : ＋
#     '=' : ＝
#     '[' : [ 「, 【, 〔, ［ ]
#     ']' : [ 」, 】, 〕, ］ ]
#     '{' : [ 『, 〖, ｛ ]
#     '}' : [ 』, 〗, ｝ ]
#   half_shape:
#     ',' : { commit: ， }
#     '.' : { commit: 。 }
#     '<' : [ 《, 〈, «, ‹ ]
#     '>' : [ 》, 〉, », › ]
#     '/' : { commit: 、 }
#     '?' : { commit: ？ }
#     ';' : { commit: ； }
#     ':' : { commit: ： }
#     '''' : { pair: [ '‘', '’' ] }
#     '"' : { pair: [ '“', '”' ] }
#     '\' : { commit: 、 }
#     '|' : '|'
#     '`' : '`'
#     '~' : { commit: ～ }
#     '!' : { commit: ！ }
#     '@' : '@'
#     '#' : '#'
#     '%' : { commit: '%' }
#     '$' : { commit: "$" }
#     '^' : { commit: …… }
#     '&' : '&'
#     '*' : { commit: '*' }
#     '(' : （
#     ')' : ）
#     '-' : '-'
#     '_' : ——
#     '+' : '+'
#     '=' : '='
#     '[' : { commit: '【' }
#     ']' : { commit: '】' }
#     '{' : { commit: '｛' }
#     '}' : { commit: '｝' }
# 
# key_binder:
#   bindings:
#     # Emacs style
#     - { when: composing, accept: Control+p, send: Up }
#     - { when: composing, accept: Control+n, send: Down }
#     - { when: composing, accept: Control+b, send: Left }
#     - { when: composing, accept: Control+f, send: Right }
#     - { when: composing, accept: Control+a, send: Home }
#     - { when: composing, accept: Control+e, send: End }
#     - { when: composing, accept: Control+d, send: Delete }
#     - { when: composing, accept: Control+k, send: Shift+Delete }
#     - { when: composing, accept: Control+h, send: BackSpace }
#     - { when: composing, accept: Control+g, send: Escape }
#     - { when: composing, accept: Control+bracketleft, send: Escape }
#     - { when: composing, accept: Alt+v, send: Page_Up }
#     - { when: composing, accept: Control+v, send: Page_Down }
#     # move by word
#     - { when: composing, accept: ISO_Left_Tab, send: Shift+Left }
#     - { when: composing, accept: Shift+Tab, send: Shift+Left }
#     - { when: composing, accept: Tab, send: Shift+Right }
#     # flip page
#     - { when: has_menu, accept: minus, send: Page_Up }
#     - { when: has_menu, accept: equal, send: Page_Down }
#     - { when: paging, accept: comma, send: Page_Up }
#     - { when: has_menu, accept: period, send: Page_Down }
#     # hotkey switch
#     - { when: always, accept: Control+Shift+1, select: .next }
#     - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
#     - { when: always, accept: Control+Shift+3, toggle: full_shape }
#     - { when: always, accept: Control+Shift+4, toggle: simplification }
#     - { when: always, accept: Control+Shift+5, toggle: extended_charset }
#     - { when: always, accept: Control+Shift+exclam, select: .next }
#     - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
#     - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
#     - { when: always, accept: Control+Shift+dollar, toggle: simplification }
#     - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
#     - { when: always, accept: Shift+space, toggle: full_shape }
#     - { when: always, accept: Control+period, toggle: ascii_punct }
# 
# recognizer:
#   patterns:
#     uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
#     reverse_lookup: "[a-z`]*`+[a-z`]*"
#     punct: ""
# 
# ascii_composer:
#   good_old_caps_lock: true
#   switch_key:
#     Shift_L: inline_ascii
#     Shift_R: commit_text
#     Control_L: noop
#     Control_R: noop
#     Caps_Lock: clear
#     Eisu_toggle: clear
# ------------------------------------------------------------------------------------------
# ❯ cat 小鹤音形Rime平台鼠须管for\ macOS/rime/default.custom.yaml
# customization:
#   distribution_code_name: Squirrel
#   distribution_version: 2019-06-23
#   rime_version: 1.5.3
# patch:
#   schema_list:
#     - schema: flypy # 添加小鹤音形
# 
# #
# # 可用的按键有 Caps_Lock, Shift_L, Shift_R, Control_L, control_R
# # Mac 系统上的鼠须管不能区分左、右，因此只有对 Shift_L, Control_L 的设定起作用
# #
# # 已输入编码时按切换键，可以进一步设定输入法中西文切换的形式
# # 可选的临时切换策略有三：
# # inline_ascii 在输入法的临时西文编辑区内输入字母、数字、符号、空格等，回车上屏后自动复位到中文
# # commit_text 已输入的候选文字上屏并切换至西文输入模式
# # commit_code 已输入的编码字符上屏并切换至西文输入模式
# # 设为 noop, 屏蔽该切换键
# #
# # 如果要把Caps Lock 设为只改变字母的大小写而不做中西文切换，可将 Caps_Lock 对应的切换方式设为 noop
# # 如果要以Caps Lock 切换到西文模式，默认输出小写字母，请置 ascii_composer/good_old_caps_lock: false
# # 如果要以Caps Lock 切换到西文模式，默认输出大写字母，请置 ascii_composer/good_old_caps_lock: true
# 
#   ascii_composer/good_old_caps_lock: true
#   ascii_composer/switch_key:
#     Caps_Lock: noop
#     Shift_L: commit_code
#     Shift_R: noop
#     Control_L: noop
#     Control_R: noop
# 
#   key_binder/bindings:
#     - when: paging
#       accept: bracketleft
#       send: Page_Up
#     - when: has_menu
#       accept: bracketright
#       send: Page_Down
# ------------------------------------------------------------------------------------------
# 拷贝文件:
#   build/*
#   flypy.schema.yaml
#   flypy_full全码字.txt
#   flypy_sys.txt
#   flypy_top.txt
#   flypy_user.txt
#   lua/calculator_translator.lua
# 新增文件:
#   flypy.custom.yaml
# 修改文件:
#   default.custom.yaml # 方案列表增加小鹤音形
# ------------------------------------------------------------------------------------------
