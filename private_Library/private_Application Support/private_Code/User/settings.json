// https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts
// https://code.visualstudio.com/docs/getstarted/keybindings#_accepted-keys
// https://github.com/nikitavoloboev/config/blob/master/vscode/settings.json
// https://github.com/AnthonyAsDev/VSCodeVimSettings
// TODO https://github.com/redguardtoo/vscode-setup/blob/master/settings.json
// TODO https://github.com/MilesMcBain/vsconfig/blob/01a8763aa8cfad89d11bd4e7ed14d73f54e96409/settings.json#L1449
// TODO https://github.com/ravenxrz/dotfiles/blob/3553f11637f8ac6c00eb0f4b1fc3836d08a1ec06/vscode/settings.json
{
    "hediet.vscode-drawio.resizeImages": null,
    "hediet.vscode-drawio.theme": "dark",
    "hediet.vscode-drawio.customColorSchemes": [],
    "window.density.editorTabHeight": "compact",
    "editor.accessibilitySupport": "off",
    "[python]": {
        "editor.formatOnType": true
    },
    "editor.fontLigatures": false,
    "editor.fontWeight": "normal",
    "editor.wordWrap": "on",
    "vim.useSystemClipboard": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "vim.camelCaseMotion.enable": true,
    "vim.easymotion": true,
    // "vim.easymotionMarkerBackgroundColor": "yellow",
    // "vim.easymotionKeys": "hklyuiopnm,qwertzxcvbasdgjf;",
    // "vim.easymotionMarkerForegroundColorOneChar": "black",
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 500,
    "vim.replaceWithRegister": true,
    "vim.sneak": true,
    "vim.sneakReplacesF": true,
    "vim.sneakUseIgnorecaseAndSmartcase": true,
    "vim.handleKeys": {
        "<C-d>": true,
        "<C-s>": false,
        "<C-z>": false
    },
    "vim.leader": "<space>",
    // TODO
    // projectManager.listProjectsNewWindow
    // workbench.action.splitEditorDown
    // workbench.action.splitEditorRight
    // editor.fold
    // editor.unfold
    // workbench.action.showAllEditorsByMostRecentlyUsed
    // references-view.showCallHierarchy
    // workbench.action.debug.run
    "vim.normalModeKeyBindings": [
        {
            "before":["j"],
            "after": ["g", "j"]
        },
        {
            "before":["k"],
            "after": ["g", "k"]
        },
        {
            "before":["Y"],
            "after": ["y", "$"]
        },
        {
            "before":["H"],
            "after": ["^"]
        },
        {
            "before":["L"],
            "after": ["$"]
        },
        // https://github.com/vscode-neovim/vscode-neovim/blob/02d13f0e119afbec8f68fe5add0f2c2a1072ec49/package.json#L1674
        {
            "before": ["K"],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            "before": ["g", "i"],
            "commands": [
                "editor.action.goToImplementation"
            ]
        },
        {
            "before": ["g", "D"],
            "commands": [
                "editor.action.goToTypeDefinition"
            ]
        },
        {
            "before": ["]", "e"],
            "commands": [
                "editor.action.marker.next"
            ]
        },
        {
            "before": ["[", "e"],
            "commands": [
                "editor.action.marker.prev"
            ]
        },
        {
            "before": ["]", "c"],
            "commands": [
                // "workbench.action.editor.nextChange",
                "editor.action.dirtydiff.next"
            ]
        },
        {
            "before": ["[", "c"],
            "commands": [
                // "workbench.action.editor.previousChange",
                "editor.action.dirtydiff.previous"
            ]
        },
        {
            "before": ["leader", "enter"],
            "commands": [
                "editor.action.quickFix"
            ]
        },
        {
            "before": ["leader", ","],
            "commands": [
                "workbench.action.quickOpen",
            ],
            "silent": true
        },
        {
            "before": ["leader", ";"],
            "commands": [
                "workbench.action.showCommands",
            ],
            "silent": true
        },
        {
            "before": ["leader", "?"],
            "commands": [
                "workbench.action.openGlobalKeybindings"
            ]
        },
        // {
        //     "before": ["leader", "r"],
        //     "commands": [
        //         "editor.action.startFindReplaceAction"
        //     ]
        // },
        // TODO cf
        {
            "before": ["leader", "L"],
            "commands": [
                "editor.action.formatDocument"
            ]
        },
        // w for window
        {
            "before": ["leader", "w", "e"],
            "commands": [
                "workbench.view.extensions"
            ]
        },
        // TODO version control: workbench.view.scm
        // TODO workbench.view.explorer
        // TODO cr
        {
            "before": ["leader", "r", "n"],
            "commands": [
                "editor.action.rename"
            ]
        },
        // doomemacs keybindings
        {
            "before": ["leader", "b", "d"],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        {
            "before": ["leader", "b", "n"],
            "commands": [
                "workbench.action.nextEditor"
            ]
        },
        {
            "before": ["leader", "b", "p"],
            "commands": [
                "workbench.action.previousEditor"
            ]
        },
        {
            "before": ["leader", "b", "N"],
            "commands": [
                "workbench.action.files.newUntitledFile"
            ]
        },
        {
            "before": ["leader", "b", "o"],
            "commands": [
                "workbench.action.closeOtherEditors"
            ]
        },
        {
            "before": ["leader", "f", "s"],
            "commands": [
                "workbench.action.files.save"
            ]
        },
        {
            "before": ["leader", "f", "y"],
            "commands": [
                "workbench.action.files.copyPathOfActiveFile"
            ]
        },
        {
            "before": ["leader", "f", "Y"],
            "commands": [
                "copyRelativeFilePath"
            ]
        },
        // https://github.com/zhangymPerson/learning-notes/blob/ae1471b072e209ba8856756ab2081003ce663dd7/tools/vim/vim_vscode.json#L42
        {
            "before": ["leader", "f", "r"],
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
            ]
        },
        {
            "before": ["leader", "g", "s"],
            "commands": [
                "workbench.action.gotoSymbol"
            ]
        },
        {
            "before": ["leader", "t", "t"],
            "commands": [
                "workbench.action.terminal.focus"
            ]
        },
        {
            "before": ["leader", "t", "w"],
            "commands": [
                "editor.action.toggleWordWrap"
            ]
        },
        {
            "before": ["leader", "t", "z"],
            "commands": [
                "workbench.action.toggleZenMode"
            ]
        },
        {
            "before": ["leader", "t", "F"],
            "commands": [
                "workbench.action.toggleFullScreen"
            ]
        },
        {
            "before": ["leader", "t", "b"],
            "commands": [
                "workbench.action.toggleSidebarVisibility"
            ]
        },
        {
            "before": ["leader", "t", "p"],
            "commands": [
                "workbench.action.togglePanel"
            ]
        },
        {
            "before": ["leader", "s", "b"],
            "commands": [
                "actions.find"
            ]
        },
        // search all open buffers
        {
            "before": ["leader", "s", "B"],
            "commands": [
                // "workbench.view.search"
                "workbench.action.findInFiles"
            ]
        },
        {
            "before": ["leader", "e", "e"],
            "commands": [
                // "workbench.files.action.focusFilesExplorer"
                // "workbench.files.action.showActiveFileInExplorer"
                "workbench.view.explorer"
            ]
        },
        {
            "before": ["leader", "o", "f"],
            "commands": [
                "workbench.action.files.openFile"
            ]
        },
        {
            "before": ["leader", "o", "F"],
            "commands": [
                "workbench.action.files.openFolder"
            ]
        },
        {
            "before": ["leader", "o", "r"],
            "commands": [
                "workbench.action.openRecent"
            ]
        },
        {
            "before": ["leader", "d", "s"],
            "commands": [
                "workbench.action.debug.stop"
            ]
        },
        {
            "before": ["leader", "d", "r"],
            "commands": [
                "workbench.action.debug.restart"
            ]
        },
        {
            "before": ["leader", "d", "b"],
            "commands": [
                "editor.debug.action.toggleBreakpoint"
            ]
        },
        {
            "before": ["leader", "p", "d"],
            "commands": ["editor.action.peekDefinition"]
        },
        {
            "before": ["leader", "p", "r"],
            "commands": ["editor.action.referenceSearch.trigger"]
        },
        {
            "before": ["leader", "q", "q"],
            "commands": [
                // "workbench.action.closeActiveEditor"
                "workbench.action.closeWindow"
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        // https://vspacecode.github.io/docs/whichkey/
        // {
        //   "before": ["<space>"],
        //   "commands": ["whichkey.show"]
        // }
        {
            "before":["<Esc>"],
            // without `after`: editor.action.peekDefinition -> togglePeekWidgetFocus -> `esc` will not close peek widget
            "after": ["<Esc>"],
            "commands": [
                // https://github.com/VSCodeVim/Vim/issues/9029#issuecomment-2130972680
                // "extension.vim_escape",
                ":nohl",
                // "workbench.action.maximizeEditorHideSidebar",
                "workbench.action.closeSidebar",
                "workbench.action.closePanel"
            ],
            "silent": true
        },
        {
            "before":["enter"],
            // editor.action.revealDefinition
            "after": ["g", "d"]
        },
        {
            "before":["backspace"],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        {
            "before": ["left"],
            "commands": [
                // "workbench.action.navigateBack"
                // https://github.com/Valloric/dotfiles/blob/bda97c9a6369564671942c0b4fb750b71a55f6da/vscode/settings.json#L239
                // workbench.action.openGlobalKeybindings -> search "extension.vim"
                "extension.vim_ctrl+o"
            ]
        },
        {
            "before": ["right"],
            "commands": [
                // "workbench.action.navigateForward"
                "extension.vim_ctrl+i"
            ]
        },
        {
            "before": ["leader", "<space>"],
            "commands": [
                {
                    "command": "workbench.action.closeSidebar",
                    "args": []
                },
                {
                    "command": "workbench.action.closePanel",
                    "args": []
                }
            ]
        },
        // https://github.com/Valloric/dotfiles/blob/bda97c9a6369564671942c0b4fb750b71a55f6da/vscode/settings.json
        {
            "before": ["z", "j"],
            "after": ["m", "m", "o", "<Esc>", "`", "m"]
        },
        {
            "before": ["z", "k"],
            "after": ["O", "<Esc>", "j", "0"]
        },
    ],
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["j", "k"],
            "after": ["<Esc>"]
        },
        {
            "before": ["k", "j"],
            "after": ["<Esc>"]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before":["j"],
            "after": ["g", "j"]
        },
        {
            "before":["k"],
            "after": ["g", "k"]
        },
        {
            "before":["H"],
            "after": ["^"]
        },
        {
            "before":["L"],
            "after": ["$"]
        },
        // Bind > and < in visual mode to indent/outdent lines (repeatable)
        {
            "before": [">"],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": ["<"],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        // work with extension: Comment Translate
        {
            "before": ["g", "h"],
            "commands": [
                "editor.action.showHover"
            ]
        },
        {
            "before": ["leader", "L"],
            "commands": [
                "editor.action.formatSelection"
            ]
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        // https://vspacecode.github.io/docs/whichkey/
        // {
        //   "before": ["<space>"],
        //   "commands": ["whichkey.show"]
        // }
        {
            "before": ["K"],
            "commands": [
                "editor.action.smartSelect.expand"
            ]
        },
        {
            "before": ["J"],
            "commands": [
                "editor.action.smartSelect.shrink"
            ]
        },
    ],
    "vim.operatorPendingModeKeyBindings": [
        // makes yL and dH work like y$ and d^ respectively
        {
            "before": ["L"],
            "after": ["$"]
        },
        {
            "before": ["H"],
            "after": ["^"]
        }
    ],
    "vim.commandLineModeKeyBindings": [],
    "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1,
        // VSCodeVim is too slow! To improve performance | https://github.com/microsoft/vscode/issues/75627#issuecomment-1078827311
        "vscodevim.vim": 1
    },
    "terminal.integrated.copyOnSelection": true,
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": false
    },
    "markdown-preview-enhanced.codeBlockTheme": "github.css",
    "markdown-preview-enhanced.previewTheme": "github-light.css",
    "markdown-preview-enhanced.enablePreviewZenMode": true,
    "workbench.editor.enablePreview": false,
    "workbench.editor.tabActionCloseVisibility": false,
    "workbench.editor.highlightModifiedTabs": true,
    // https://github.com/canyonwan/vscode-settings/blob/739ad93d34d52affe03fa18d9d72ee4794aae861/User/History/2276140c/SbTI.json#L179
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#0095FF", // 光标颜色
        "tab.activeBorder": "#d63864" // 选中选项卡的下边框
    },
    "maven.settingsFile": "",
    "editor.minimap.enabled": false,
    "github.copilot.editor.enableAutoCompletions": true,
    "todo-tree.highlights.useColourScheme": true,
    // https://github.com/beishanyufu/ime-and-cursor
    // "ime-and-cursor.ChineseIM": "im.rime.inputmethod.Squirrel.Hans",
    // "ime-and-cursor.EnglishIM": "com.apple.keylayout.ABC",
    // "ime-and-cursor.obtainIMCmd": "/opt/homebrew/bin/macism",
    // "ime-and-cursor.switchIMCmd": "/opt/homebrew/bin/macism {im}",
    // "ime-and-cursor.cursorStyle.enable": false,
    // "ime-and-cursor.cursorColor.enable": true,
    // "ime-and-cursor.helpVim": true,
    // https://github.com/OrangeX4/vscode-smart-ime
    // "smart-ime.enableEnglishAndDoubleSpaceSwitchToChinese": true,
    // "smart-ime.disabledOnVim": true
}
