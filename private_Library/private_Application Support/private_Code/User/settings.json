// https://code.visualstudio.com/docs/getstarted/keybindings#_default-keyboard-shortcuts
// https://code.visualstudio.com/docs/getstarted/keybindings#_accepted-keys
// https://github.com/nikitavoloboev/config/blob/master/vscode/settings.json
// https://github.com/AnthonyAsDev/VSCodeVimSettings
{
    "hediet.vscode-drawio.resizeImages": null,
    "hediet.vscode-drawio.theme": "dark",
    "hediet.vscode-drawio.customColorSchemes": [],
    "window.density.editorTabHeight": "compact",
    "editor.accessibilitySupport": "off",
    "[python]": {
        "editor.formatOnType": true
    },
    "editor.fontLigatures": false,
    "editor.fontWeight": "normal",
    "editor.wordWrap": "on",
    "vim.useSystemClipboard": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "vim.camelCaseMotion.enable": true,
    "vim.easymotion": true,
    // "vim.easymotionMarkerBackgroundColor": "yellow",
    // "vim.easymotionKeys": "hklyuiopnm,qwertzxcvbasdgjf;",
    // "vim.easymotionMarkerForegroundColorOneChar": "black",
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 500,
    "vim.replaceWithRegister": true,
    "vim.sneak": true,
    "vim.sneakReplacesF": true,
    "vim.sneakUseIgnorecaseAndSmartcase": true,
    "vim.handleKeys": {
        "<C-d>": true,
        "<C-s>": false,
        "<C-z>": false
    },
    "vim.leader": "<space>",
    "vim.normalModeKeyBindings": [
        {
            "before":["j"],
            "after": ["g", "j"]
        },
        {
            "before":["k"],
            "after": ["g", "k"]
        },
        {
            "before":["<Esc>"],
            "commands": [
                ":nohl",
            ]
        },
        {
            "before":["Y"],
            "after": ["y", "$"]
        },
        {
            "before":["H"],
            "after": ["^"]
        },
        {
            "before":["L"],
            "after": ["$"]
        },
        {
            "before": ["leader", "q"],
            "commands": [
                "workbench.action.closeActiveEditor",
            ]
        },
        // w for window
        {
            "before": ["leader", "w", "e"],
            "commands": [
                "workbench.view.extensions",
            ]
        },
        {
            "before": ["<leader>", "a"],
            "after": [],
            "commands": [
                {
                    "command": "workbench.action.files.save",
                    "args": []
                },
                {
                    "command": "workbench.action.closeActiveEditor",
                    "args": []
                }
            ]
        },
        {
            "before": ["leader", "r"],
            "commands": [
                "editor.action.startFindReplaceAction",
            ]
        },
        {
            "before": ["leader", "j"],
            "after": ["leader", "leader", "w"]
        },
        {
            "before": ["leader", "k"],
            "after": ["leader", "leader", "b"]
        },
        {
            "before": ["<leader>", "i"],
            "after": ["y", "i", "\""]
        },
        {
            "before": ["leader", ","],
            "commands": [
                "workbench.action.quickOpen",
            ],
            "silent": true
        },
        {
            "before": ["leader", ";"],
            "commands": [
                "workbench.action.showCommands",
            ],
            "silent": true
        },
        // doomemacs keybindings
        {
            "before": ["leader", "b", "d"],
            "commands": [
                "workbench.action.closeActiveEditor",
            ]
        },
        {
            "before": ["leader", "b", "n"],
            "commands": [
                "workbench.action.nextEditor",
            ]
        },
        {
            "before": ["leader", "b", "p"],
            "commands": [
                "workbench.action.previousEditor",
            ]
        },
        {
            "before": ["leader", "b", "N"],
            "commands": [
                "workbench.action.files.newUntitledFile",
            ]
        },
        {
            "before": ["leader", "b", "o"],
            "commands": [
                "workbench.action.closeOtherEditors",
            ]
        },
        {
            "before": ["leader", "f", "s"],
            "commands": [
                "workbench.action.files.save",

            ]
        },
        {
            "before": ["leader", "f", "y"],
            "commands": [
                "workbench.action.files.copyPathOfActiveFile",
            ]
        },
        {
            "before": ["leader", "t", "w"],
            "commands": [
                "editor.action.toggleWordWrap",
            ]
        },
        {
            "before": ["leader", "t", "z"],
            "commands": [
                "workbench.action.toggleZenMode",
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        // https://vspacecode.github.io/docs/whichkey/
        // {
        //   "before": ["<space>"],
        //   "commands": ["whichkey.show"]
        // }
    ],
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["j", "k"],
            "after": ["<Esc>"]
        },
        {
            "before": ["k", "j"],
            "after": ["<Esc>"]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before":["j"],
            "after": ["g", "j"]
        },
        {
            "before":["k"],
            "after": ["g", "k"]
        },
        {
            "before":["H"],
            "after": ["^"]
        },
        {
            "before":["L"],
            "after": ["$"]
        },
        // Bind > and < in visual mode to indent/outdent lines (repeatable)
        {
            "before": [">"],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": ["<"],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        // work with extension: Comment Translate
        {
            "before": ["g", "h"],
            "commands": [
                "editor.action.showHover"
            ]
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        // https://vspacecode.github.io/docs/whichkey/
        // {
        //   "before": ["<space>"],
        //   "commands": ["whichkey.show"]
        // }
    ],
    "vim.operatorPendingModeKeyBindings": [
        // makes yL and dH work like y$ and d^ respectively
        {
            "before": ["L"],
            "after": ["$"]
        },
        {
            "before": ["H"],
            "after": ["^"]
        }
    ],
    "vim.commandLineModeKeyBindings": [],
    "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1,
        // VSCodeVim is too slow! To improve performance | https://github.com/microsoft/vscode/issues/75627#issuecomment-1078827311
        "vscodevim.vim": 1
    },
    "terminal.integrated.copyOnSelection": true,
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": false,
        "scminput": false
    },
    "markdown-preview-enhanced.codeBlockTheme": "github.css",
    "markdown-preview-enhanced.previewTheme": "github-light.css",
    "markdown-preview-enhanced.enablePreviewZenMode": true,
    "workbench.editor.enablePreview": false,
    "maven.settingsFile": ""
    // https://github.com/beishanyufu/ime-and-cursor
    // "ime-and-cursor.ChineseIM": "im.rime.inputmethod.Squirrel.Hans",
    // "ime-and-cursor.EnglishIM": "com.apple.keylayout.ABC",
    // "ime-and-cursor.obtainIMCmd": "/opt/homebrew/bin/macism",
    // "ime-and-cursor.switchIMCmd": "/opt/homebrew/bin/macism {im}",
    // "ime-and-cursor.cursorStyle.enable": false,
    // "ime-and-cursor.cursorColor.enable": true,
    // "ime-and-cursor.helpVim": true,
    // https://github.com/OrangeX4/vscode-smart-ime
    // "smart-ime.enableEnglishAndDoubleSpaceSwitchToChinese": true,
    // "smart-ime.disabledOnVim": true
}
