// 将键绑定放在此文件中以覆盖默认值
// TODO https://github.com/vscode-neovim/vscode-neovim/blob/02d13f0e119afbec8f68fe5add0f2c2a1072ec49/package.json#L1453
// TODO https://github.com/magidc/dotfiles/blob/master/vscode/keybindings.json | https://github.com/magidc/nvim-config#equivalent-mapping-configurations-for-other-ides-vim-integrations
// TODO https://github.com/zhangymPerson/learning-notes/blob/ae1471b072e209ba8856756ab2081003ce663dd7/tools/vscode/keybindings/keybindings.json
// TODO https://github.com/kasecato/vscode-intellij-idea-keybindings/blob/master/src/package-with-comment.json
[
    {
        "key": "shift+;",
        "command": "vim.showQuickpickCmdLine",
        "when": "inZenMode && vim.mode != 'Insert'"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "textInputFocus"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "textInputFocus"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "k"
    },
    // https://gist.github.com/MasoodGit/1cc302c61622e777ca09f8bf4ae84adc
    // https://github.com/magidc/dotfiles/blob/3a20bc944187fbf459e9c16de0c3e50d7b3800a9/vscode/keybindings.json#L321
    {
        "key": "ctrl+h",
        // "command": "workbench.action.focusLeftGroup",
        "command": "workbench.action.navigateLeft"
        // remove editorTextFocus for markdown-preview-enhanced
        // https://code.visualstudio.com/api/references/when-clause-contexts#available-context-keys
        // "when": "vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        // "command": "workbench.action.focusRightGroup",
        "command": "workbench.action.navigateRight"
        // "when": "vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        // "command": "workbench.action.focusAboveGroup",
        "command": "workbench.action.navigateUp"
        // "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        // "command": "workbench.action.focusBelowGroup",
        "command": "workbench.action.navigateDown"
        // "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "escape",
        // "command": "workbench.action.navigateEditorGroups",
        // "command": "workbench.action.focusFirstEditorGroup",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorFocus"
    },
    // https://github.com/vscode-neovim/vscode-neovim/blob/02d13f0e119afbec8f68fe5add0f2c2a1072ec49/package.json#L1453
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus && !notebookCellListFocused"
    },
    {
        "key": "g g",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+g",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "/",
        "command": "list.find",
        "when": "listFocus && listSupportsFind && !inputFocus"
    },
    {
        "key": "enter",
        "command": "list.closeFind",
        "when": "listFocus && treeFindOpen && inputFocus"
    },
    // 文件资源管理器
    // https://github.com/search?q=explorer.newFile+language%3AJSON&type=code
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "v",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+r",
        "command": "workbench.files.action.refreshFilesExplorer",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "z o",
        "command": "list.expand",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z shift+o",
        "command": "list.expand",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z c",
        "command": "list.collapse",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z shift+c",
        "command": "list.collapseAllToFocus",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z a",
        "command": "list.toggleExpand",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z shift+a",
        "command": "list.toggleExpand",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z m",
        "command": "list.collapseAll",
        "when": "!editorTextFocus && !inputFocus"
    },
    {
        "key": "z shift+m",
        "command": "list.collapseAll",
        "when": "!editorTextFocus && !inputFocus"
    },
    // referenceSearch can be activated by `g d`
    {
        "key": "tab",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor && neovim.mode == normal || referenceSearchVisible"
    },
    // hover
    {
        "command": "editor.action.showHover",
        "key": "shift+k",
        "when": "vim.mode == 'Normal' && editorTextFocus && editorHoverVisible"
    },
    {
        "command": "editor.action.pageDownHover",
        "key": "ctrl+f",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.pageUpHover",
        "key": "ctrl+b",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.pageDownHover",
        "key": "ctrl+d",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.pageUpHover",
        "key": "ctrl+u",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.scrollDownHover",
        "key": "j",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.scrollUpHover",
        "key": "k",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.scrollLeftHover",
        "key": "h",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.scrollRightHover",
        "key": "l",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.goToTopHover",
        "key": "g g",
        "when": "editorHoverFocused"
    },
    {
        "command": "editor.action.goToBottomHover",
        "key": "shift+g",
        "when": "editorHoverFocused"
    },
    // {
    //     "key": "space l",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "vim.active && vim.mode != 'Insert'"
    // },
    // https://github.com/nikitavoloboev/config/blob/master/vscode/keybindings.json
    {
        "key": "ctrl+;",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "terminalFocus"
    },
    // vim redo
    // {
    //     "key": "ctrl+r",
    //     "command": "workbench.view.explorer"
    // },
    // {
    //     "key": "ctrl+j",
    //     "command": "workbench.action.previousEditor"
    // },
    // {
    //     "key": "ctrl+k",
    //     "command": "workbench.action.nextEditor"
    // },
    {
        "key": "cmd+j",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "cmd+m",
        "command": "workbench.action.quickOpenTerm"
    },
    {
        "key": "enter",
        "command": "editor.action.goToDeclaration",
        "when": "inSearchEditor && editorTextFocus && vim.mode == 'Normal'"
    },
    // {
    //     "key": "ctrl+i",
    //     "command": "editor.action.quickFix",
    //     "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    // },
    {
        "key": "shift+cmd+'",
        "command": "toggleVim"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+d",
    //     "command": "editor.action.rename"
    // },
    {
        "key": "cmd+.",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.codeAction"
    },
    {
        "key": "shift+cmd+f",
        "command": "search.action.openEditor"
    },
    // https://github.com/beishanyufu/ime-and-cursor
    // {
    //     "key": "ctrl+\\",
    //     "command": "ime-and-cursor.switch"
    // },
    // {
    //     "key": "shift+space",
    //     "command": "-ime-and-cursor.switch"
    // }
]
